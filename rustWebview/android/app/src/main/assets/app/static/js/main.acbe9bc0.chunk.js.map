{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","layouts/DashboardLayout/RightBar/NavItem.js","layouts/DashboardLayout/RightBar/index.js","components/Logo.js","layouts/DashboardLayout/UserMenu.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/account/AccountView/Profile.js","views/account/AccountView/ProfileDetails.js","views/account/AccountView/index.js","views/users/UsersView/Results.js","utils/getInitials.js","views/users/UsersView/Toolbar.js","views/users/UsersView/data.js","views/users/UsersView/index.js","views/homepage/DashboardView/PostCard.js","views/homepage/DashboardView/Posts.js","views/homepage/DashboardView/Toolbar.js","views/homepage/DashboardView/Post.js","views/homepage/DashboardView/Services.js","views/homepage/DashboardView/Budget.js","views/homepage/DashboardView/LatestOrders.js","views/homepage/DashboardView/LatestProducts.js","views/homepage/DashboardView/Sales.js","views/homepage/DashboardView/TasksProgress.js","views/homepage/DashboardView/TotalCustomers.js","views/homepage/DashboardView/TotalProfit.js","views/homepage/DashboardView/TrafficByDevice.js","views/homepage/DashboardView/index.js","icons/Facebook.js","icons/Google.js","views/auth/LoginView.js","views/errors/NotFoundView.js","views/communities/CommunitiesView/Toolbar.js","views/communities/CommunitiesView/Results.js","views/communities/CommunitiesView/data.js","views/communities/CommunitiesView/index.js","views/auth/RegisterView.js","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","views/post/PostView/Toolbar.js","views/post/PostView/Notifications.js","views/post/PostView/Password.js","views/post/PostView/FormMeta.js","views/post/PostView/FormAssets.js","views/post/PostView/AddJobs.js","views/post/PostView/AddSkills.js","views/post/PostView/AddCategories.js","views/post/PostView/FormCategories.js","views/post/PostView/Post.js","views/post/PostView/index.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","item","display","paddingTop","paddingBottom","button","color","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","website","items","Home","PostAdd","BookOpen","UserIcon","UsersIcon","Bell","SettingsIcon","mobileDrawer","desktopDrawer","avatar","cursor","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","Typography","name","variant","Divider","List","map","key","flexGrow","m","bgcolor","align","gutterBottom","mt","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","user","RightBar","Logo","props","alt","StyledMenu","withStyles","border","disableScrollLock","elevation","getContentAnchorEl","anchorOrigin","vertical","transformOrigin","root","boxShadow","StyledMenuItem","MenuItem","UserMenu","useState","anchorEl","setAnchorEl","handleClose","onClick","event","currentTarget","id","keepMounted","ListItemIcon","AccountBox","ListItemText","Send","DataUsage","Drafts","Settings","ExitToApp","TopBar","onMobileNavOpen","notifications","AppBar","IconButton","Badge","badgeContent","length","style","aria-controls","aria-haspopup","Menu","wrapper","flex","breakpoints","up","paddingLeft","paddingRight","contentContainer","maxWidth","DashboardLayout","isMobileNavOpen","setMobileNavOpen","clasName","toolbar","overflow","MainLayout","Page","forwardRef","ref","children","Helmet","Profile","Card","CardContent","dateText","moment","format","CardActions","fullWidth","states","value","label","ProfileDetails","firstName","lastName","email","phone","state","country","values","setValues","handleChange","target","autoComplete","noValidate","CardHeader","subheader","Grid","container","md","xs","TextField","helperText","onChange","required","type","select","SelectProps","native","option","minHeight","Account","Container","lg","Results","customers","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","minWidth","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","newSelectedCustomerIds","customer","TableBody","slice","hover","selected","selectedIndex","concat","handleSelectOne","avatarUrl","replace","split","v","toUpperCase","join","getInitials","address","city","createdAt","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","importButton","exportButton","Toolbar","InputProps","startAdornment","InputAdornment","position","SvgIcon","placeholder","uuid","street","UsersView","data","Artifact","Activity","Text","TypePOst","Fragment","statsItem","statsIcon","userName","userPhoto","borderRadius","StyledBadge","badge","PostCard","post","typePost","mb","lineHeight","Link","CardMedia","media","thumbnail","justify","aria-label","pl","views","App","postsData","isLoading","error","setState","fetch","method","headers","then","response","json","catch","message","results","Pagination","Component","Post","direction","createData","calories","fat","carbs","protein","price","history","date","customerId","amount","priority","red","differenceIcon","differenceValue","actions","subtract","image","orange","green","Dashboard","Posts","Facebook","d","Google","LoginView","navigate","useNavigate","initialValues","password","validationSchema","Yup","shape","max","onSubmit","errors","handleBlur","handleSubmit","isSubmitting","touched","startIcon","onBlur","my","disabled","marginTop","NotFoundView","textAlign","result","description","totalDownloads","CommunitiesView","RegisterView","policy","oneOf","ml","underline","FormHelperText","Notifications","wrap","sm","FormControlLabel","control","defaultChecked","Password","confirm","SettingsView","autoFocus","dateN","today","Date","getFullYear","getMonth","getDate","getAtualDate","FormMeta","multiline","rows","rowsMax","defaultValue","InputLabelProps","shrink","down","zIndex","opacity","focusVisible","imageButton","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","black","transition","transitions","create","imageTitle","imageMarked","FormAssets","ButtonBase","focusRipple","focusVisibleClassName","backgroundImage","Jobs","React","setOpen","setOptions","loading","setInputWord","changeOptionBaseOnValue","val","query","wordInput","word","toLowerCase","queryOccupation","SERVER","encodeURIComponent","btoa","bindings","Object","keys","buildOptions","Autocomplete","onOpen","getOptionSelected","occupation","getOptionLabel","toString","onInputChange","reason","renderInput","params","endAdornment","CircularProgress","Skills","querySkill","skill","open1","setOpen1","open2","setOpen2","open3","setOpen3","open4","setOpen4","number","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","AddJobs","DialogActions","AddSkills","AddCategories","textExamples","formVar","setForm","examplesN","setExamplesN","examplesText","setExamplesText","formType","arg","callback","delay","intervalId","useRef","savedCallback","current","setInterval","clearInterval","useInterval","Fab","FormCategories","routes","path","element","DashboardView","AccountView","PostView","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sOAaoBA,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,8CCjBEC,EAAYC,aAAW,kBAAMC,YAAa,CAC9C,UAAW,CACT,IAAK,CACHC,UAAW,aACXC,OAAQ,EACRC,QAAS,GAEXC,KAAM,CACJ,yBAA0B,cAC1B,0BAA2B,YAC3BC,OAAQ,OACRC,MAAO,QAETC,KAAM,CACJC,gBAAiB,UACjBH,OAAQ,OACRC,MAAO,QAETG,EAAG,CACDC,eAAgB,QAElB,QAAS,CACPL,OAAQ,OACRC,MAAO,cAWEK,EANM,WAGnB,OAFAb,IAEO,M,QC2JTc,QAAMC,QAAQC,OAAOF,QAAMG,SAASC,UAAUC,UAAW,CACvDC,KAzLF,WAAiB,IAKXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAXIC,EAAQC,KAAKC,OAAbF,IACFG,EAAKF,KAAKG,MACVC,EAAgBF,EAAhBE,YAaAC,EAAiBL,KAAKC,OAAOK,OAAOC,QAApCF,aA+BN,GA9BIA,EAAe,IACjBA,EAAe,GAGW,qBAAjBA,IACTA,EAAe,GAGZH,EAAGM,YAWNjB,EAAOW,EAAGO,KACVjB,EAAQU,EAAGQ,EACXjB,EAAMS,EAAGS,EAAIT,EAAGzB,OAAS,EACzBiB,EAASQ,EAAGS,EAAIT,EAAGzB,OAAS,EAC5BkB,EAAQH,EAAQD,EAAO,GAAK,EAC5BK,EAAQ,EACRC,EAAgBK,EAAGL,eAAiB,SAfpCN,EAAOW,EAAGQ,EAAIR,EAAGxB,MAAQ,EACzBc,EAAQU,EAAGQ,EAAIR,EAAGxB,MAAQ,EAC1Be,EAAMS,EAAGS,EAEThB,EAAQ,EACRC,GAFAF,EAASQ,EAAGO,MAEKhB,EAAM,GAAK,EAC5BI,EAAgBK,EAAGL,eAAiB,UAclCO,EAAa,CAEf,IAAMQ,EAAUC,KAAKC,IAAID,KAAKE,IAAIxB,EAAOC,GAAQqB,KAAKE,IAAItB,EAAMC,IAE1DsB,GADNZ,EAAcA,EAAcQ,EAAUA,EAAUR,GACf,EAE3Ba,EAAa1B,GAA0B,SAAlBM,EAA2BmB,EAAarB,EAAQ,GACrEuB,EAAc1B,GAA2B,UAAlBK,GAA6BmB,EAAarB,EAAQ,GACzEwB,EAAY1B,GAAyB,QAAlBI,EAA0BmB,EAAapB,EAAQ,GAClEwB,EAAe1B,GAA4B,WAAlBG,GAA8BmB,EAAapB,EAAQ,GAE9EqB,IAAeC,IACjBzB,EAAM0B,EACNzB,EAAS0B,GAGPD,IAAcC,IAChB7B,EAAO0B,EACPzB,EAAQ0B,GAIZnB,EAAIsB,YACJtB,EAAIuB,UAAYpB,EAAGtB,gBACnBmB,EAAIwB,YAAcrB,EAAGsB,YACrBzB,EAAI0B,UAAYrB,EAKhB,IAAMsB,EAAU,CAAC,CAACnC,EAAMG,GAAS,CAACH,EAAME,GAAM,CAACD,EAAOC,GAAM,CAACD,EAAOE,IAIhEiC,EADY,CAAC,SAAU,OAAQ,MAAO,SAChBC,QAAQ/B,EAAe,GAKjD,SAASgC,EAASC,GAChB,OAAOJ,GAASC,EAAcG,GAAS,IALpB,IAAjBH,IACFA,EAAc,GAQhB,IAAII,EAASF,EAAS,GACtB9B,EAAIiC,OAAOD,EAAO,GAAIA,EAAO,IAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7BF,EAASF,EAASI,GAClB,IAAIC,EAAeD,EAAI,EACF,IAAjBC,IACFA,EAAe,GAGjB,IAAMxD,EAAQgD,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACnCjD,EAASiD,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACpChB,EAAIgB,EAAQ,GAAG,GACff,EAAIe,EAAQ,GAAG,GAWrB,IATA5B,EAASO,GAEIQ,KAAKE,IAAItC,GAAU,IAC9BqB,EAASe,KAAKsB,MAAMtB,KAAKE,IAAItC,GAAU,IAErCqB,EAASe,KAAKE,IAAIrC,GAAS,IAC7BoB,EAASe,KAAKsB,MAAMtB,KAAKE,IAAIrC,GAAS,IAGpCD,EAAS,EAAG,CAEd,IAAM2D,EAAM1B,EACN2B,EAAM3B,EAAIhC,EACV4D,EAAM3B,EAAIlC,EACV8D,EAAM5B,EAAIlC,EAEV+D,EAAM9B,EACN+B,EAAM/B,EAAIhC,EACVgE,EAAM/B,EACNgC,EAAMhC,EAGZZ,EAAIiC,OAAOQ,EAAM1C,EAAQ4C,GACzB3C,EAAI6C,OAAOH,EAAM3C,EAAQ6C,GACzB5C,EAAI8C,iBAAiBJ,EAAKE,EAAKF,EAAKE,EAAM7C,GAC1CC,EAAI6C,OAAOP,EAAKE,EAAMzC,GACtBC,EAAI8C,iBAAiBR,EAAKE,EAAKF,EAAMvC,EAAQyC,GAC7CxC,EAAI6C,OAAOR,EAAMtC,EAAQwC,GACzBvC,EAAI8C,iBAAiBT,EAAKE,EAAKF,EAAKE,EAAMxC,GAC1CC,EAAI6C,OAAOJ,EAAKE,EAAM5C,GACtBC,EAAI8C,iBAAiBL,EAAKE,EAAKF,EAAM1C,EAAQ4C,QACxC,GAAIhE,EAAQ,EAAG,CAEpB,IAAM0D,EAAM1B,EAAIhC,EACV2D,EAAM3B,EACN4B,EAAM3B,EACN4B,EAAM5B,EAEN6B,EAAM9B,EAAIhC,EACV+D,EAAM/B,EACNgC,EAAM/B,EAAIlC,EACVkE,EAAMhC,EAAIlC,EAGhBsB,EAAIiC,OAAOQ,EAAM1C,EAAQ4C,GACzB3C,EAAI6C,OAAOH,EAAM3C,EAAQ6C,GACzB5C,EAAI8C,iBAAiBJ,EAAKE,EAAKF,EAAKE,EAAM7C,GAC1CC,EAAI6C,OAAOP,EAAKE,EAAMzC,GACtBC,EAAI8C,iBAAiBR,EAAKE,EAAKF,EAAMvC,EAAQyC,GAC7CxC,EAAI6C,OAAOR,EAAMtC,EAAQwC,GACzBvC,EAAI8C,iBAAiBT,EAAKE,EAAKF,EAAKE,EAAMxC,GAC1CC,EAAI6C,OAAOJ,EAAKE,EAAM5C,GACtBC,EAAI8C,iBAAiBL,EAAKE,EAAKF,EAAM1C,EAAQ4C,QAG7C3C,EAAIiC,OAAOtB,EAAIZ,EAAQa,GACvBZ,EAAI6C,OAAOlC,EAAIhC,EAAQoB,EAAQa,GAC/BZ,EAAI8C,iBAAiBnC,EAAIhC,EAAOiC,EAAGD,EAAIhC,EAAOiC,EAAIb,GAClDC,EAAI6C,OAAOlC,EAAIhC,EAAOiC,EAAIlC,EAASqB,GACnCC,EAAI8C,iBACFnC,EAAIhC,EACJiC,EAAIlC,EACJiC,EAAIhC,EAAQoB,EACZa,EAAIlC,GAENsB,EAAI6C,OAAOlC,EAAIZ,EAAQa,EAAIlC,GAC3BsB,EAAI8C,iBAAiBnC,EAAGC,EAAIlC,EAAQiC,EAAGC,EAAIlC,EAASqB,GACpDC,EAAI6C,OAAOlC,EAAGC,EAAIb,GAClBC,EAAI8C,iBAAiBnC,EAAGC,EAAGD,EAAIZ,EAAQa,GAI3CZ,EAAI+C,OACA1C,GACFL,EAAIgD,Y,oBC9JOC,EAtBDC,YAAe,CAC3BC,QAAS,CACPC,WAAY,CACVC,KAAM,UACNC,QAASC,IAAOC,OAAOC,MACvBC,MAAOH,IAAOC,OAAOC,OAEvBE,QAAS,CACPC,KAAML,IAAOM,OAAO,MAEtBC,UAAW,CACTF,KAAML,IAAOM,OAAO,MAEtBE,KAAM,CACJJ,QAASJ,IAAOS,SAAS,KACzBF,UAAWP,IAAOS,SAAS,OAG/BC,QCtBa,CACb,OACA,iEACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,+DACA,+DACA,+DACA,+DACA,+DACA,+DACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,iEDFAC,WEvBa,CACbC,GAAI,CACFC,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBC,GAAI,CACFH,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBE,GAAI,CACFJ,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBG,GAAI,CACFL,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBI,GAAI,CACFN,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBK,GAAI,CACFP,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBM,SAAU,CACRR,WAAY,Q,4KCtBVjG,EAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC4B,KAAM,CACJC,QAAS,OACTC,WAAY,EACZC,cAAe,GAEjBC,OAAQ,CACNC,MAAOjC,EAAME,QAAQY,KAAKD,UAC1BM,WAAYnB,EAAMiB,WAAWiB,iBAC7BC,eAAgB,aAChBd,cAAe,EACf9F,QAAS,WACT6G,cAAe,OACf1G,MAAO,QAET2G,KAAM,CACJC,YAAatC,EAAMuC,QAAQ,IAE7BC,MAAO,CACLF,YAAa,QAEfG,OAAQ,CACNR,MAAOjC,EAAME,QAAQQ,QAAQC,KAC7B,WAAY,CACVQ,WAAYnB,EAAMiB,WAAWiB,kBAE/B,UAAW,CACTD,MAAOjC,EAAME,QAAQQ,QAAQC,WA+CpB+B,EA1CC,SAAC,GAMV,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,KACMC,EAGF,EAHJR,KACAG,EAEI,EAFJA,MACGM,EACC,mDACEC,EAAU7H,IAEhB,OACE,kBAAC8H,EAAA,EAAD,eACEL,UAAWM,YAAKF,EAAQnB,KAAMe,GAC9BO,gBAAc,GACVJ,GAEJ,kBAACK,EAAA,EAAD,CACEC,gBAAiBL,EAAQN,OACzBE,UAAWI,EAAQf,OACnBqB,UAAWC,IACXC,GAAIX,GAEHC,GACC,kBAACA,EAAD,CACEF,UAAWI,EAAQV,KACnBmB,KAAK,OAGT,0BAAMb,UAAWI,EAAQP,OACtBA,MClCLiB,EACE,iCADFA,EAEG,aAFHA,EAGS,4BAGTC,EAAQ,CACZ,CACEd,KAAM,OACNP,KAAMsB,IACNnB,MAAO,QAET,CACEI,KAAM,OACNP,KAAMuB,IACNpB,MAAO,UAET,CACEI,KAAM,KACNP,KAAMwB,IACNrB,MAAO,cAET,CACEI,KAAM,QACNP,KAAMyB,IACNtB,MAAO,qBAET,CACEI,KAAM,OACNP,KAAM0B,IACNvB,MAAO,aAET,CACEI,KAAM,cACNP,KAAM0B,IACNvB,MAAO,eAET,CACEI,KAAM,gBACNP,KAAM2B,IACNxB,MAAO,iBAET,CACEI,KAAM,WACNP,KAAM4B,IACNzB,MAAO,aAmBLtH,EAAYC,aAAW,iBAAO,CAClC+I,aAAc,CACZxI,MAAO,KAETyI,cAAe,CACbzI,MAAO,IACPe,IAAK,GACLhB,OAAQ,qBAEV2I,OAAQ,CACNC,OAAQ,UACR3I,MAAO,GACPD,OAAQ,QAIN6I,EAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACzBzB,EAAU7H,IACVH,EAAW0J,cAEjBC,qBAAU,WACJF,GAAcD,GAChBA,MAGD,CAACxJ,EAAS4J,WAEb,IAAMC,EACJ,kBAACC,EAAA,EAAD,CACEpJ,OAAO,OACPoG,QAAQ,OACRiD,cAAc,UAEd,kBAACD,EAAA,EAAD,CACEE,WAAW,SACXlD,QAAQ,OACRiD,cAAc,SACdE,EAAG,GAEH,kBAACC,EAAA,EAAD,CACEtC,UAAWI,EAAQqB,OACnBf,UAAWC,IACX4B,IAAKzB,EACLF,GAAG,cAEL,kBAAC4B,EAAA,EAAD,CACExC,UAAWI,EAAQqC,KACnBnD,MAAM,cACNoD,QAAQ,MAEP5B,GAEH,kBAAC0B,EAAA,EAAD,CACElD,MAAM,gBACNoD,QAAQ,SAEP5B,IAGL,kBAAC6B,EAAA,EAAD,MACA,kBAACT,EAAA,EAAD,CAAKG,EAAG,GACN,kBAACO,EAAA,EAAD,KACG7B,EAAM8B,KAAI,SAAC5D,GAAD,OACT,kBAAC,EAAD,CACEgB,KAAMhB,EAAKgB,KACX6C,IAAK7D,EAAKY,MACVA,MAAOZ,EAAKY,MACZH,KAAMT,EAAKS,YAKnB,kBAACwC,EAAA,EAAD,CAAKa,SAAU,IACf,kBAACb,EAAA,EAAD,CACEG,EAAG,EACHW,EAAG,EACHC,QAAQ,mBAER,kBAACT,EAAA,EAAD,CACEU,MAAM,SACNC,cAAY,EACZT,QAAQ,MAHV,gBAOA,kBAACF,EAAA,EAAD,CACEU,MAAM,SACNR,QAAQ,SAFV,oBAMA,kBAACR,EAAA,EAAD,CACEhD,QAAQ,OACRM,eAAe,SACf4D,GAAI,GAEJ,kBAAC5C,EAAA,EAAD,CACElB,MAAM,UACNoB,UAAU,IACVT,KAAK,IACLyC,QAAQ,aAJV,aAaR,OACE,oCACE,kBAACW,EAAA,EAAD,CAAQC,MAAI,GACV,kBAACC,EAAA,EAAD,CACEC,OAAO,OACPpD,QAAS,CAAEtC,MAAOsC,EAAQmB,cAC1BkC,QAAS7B,EACT8B,KAAM7B,EACNa,QAAQ,aAEPT,IAGL,kBAACoB,EAAA,EAAD,CAAQM,QAAM,GACZ,kBAACJ,EAAA,EAAD,CACEC,OAAO,OACPpD,QAAS,CAAEtC,MAAOsC,EAAQoB,eAC1BkC,MAAI,EACJhB,QAAQ,cAEPT,MAYXN,EAAOiC,aAAe,CACpBhC,cAAe,aACfC,YAAY,GAGCF,QC5OTpJ,EAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC4B,KAAM,CACJC,QAAS,OACTC,WAAY,EACZC,cAAe,GAEjBC,OAAQ,CACNC,MAAOjC,EAAME,QAAQY,KAAKD,UAC1BM,WAAYnB,EAAMiB,WAAWiB,iBAC7BC,eAAgB,aAChBd,cAAe,EACf9F,QAAS,WACT6G,cAAe,OACf1G,MAAO,QAET2G,KAAM,CACJC,YAAatC,EAAMuC,QAAQ,IAE7BC,MAAO,CACLF,YAAa,QAEfG,OAAQ,CACNR,MAAOjC,EAAME,QAAQQ,QAAQC,KAC7B,WAAY,CACVQ,WAAYnB,EAAMiB,WAAWiB,kBAE/B,UAAW,CACTD,MAAOjC,EAAME,QAAQQ,QAAQC,WA+CpB+B,EA1CC,SAAC,GAMV,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,KACMC,EAGF,EAHJR,KACAG,EAEI,EAFJA,MACGM,EACC,mDACEC,EAAU7H,IAEhB,OACE,kBAAC8H,EAAA,EAAD,eACEL,UAAWM,YAAKF,EAAQnB,KAAMe,GAC9BO,gBAAc,GACVJ,GAEJ,kBAACK,EAAA,EAAD,CACEC,gBAAiBL,EAAQN,OACzBE,UAAWI,EAAQf,OACnBqB,UAAWC,IACXC,GAAIX,GAEHC,GACC,kBAACA,EAAD,CACEF,UAAWI,EAAQV,KACnBmB,KAAK,OAGT,0BAAMb,UAAWI,EAAQP,OACtBA,MC1CLgE,EACI,iCADJA,EAEE,aAFFA,EAGM,4BAGN9C,EAAQ,CACZ,CACEd,KAAM,iBACNP,KAAMsB,IACNnB,MAAO,QAET,CACEI,KAAM,gBACNP,KAAMwB,IACNrB,MAAO,UAET,CACEI,KAAM,iBACNP,KAAM0B,IACNvB,MAAO,aAET,CACEI,KAAM,OACNP,KAAM2B,IACNxB,MAAO,iBAET,CACEI,KAAM,gBACNP,KAAM4B,IACNzB,MAAO,aAmBLtH,EAAYC,aAAW,iBAAO,CAClC+I,aAAc,CACZxI,MAAO,KAETyI,cAAe,CACbzI,MAAO,IACPe,IAAK,GACLhB,OAAQ,qBAEV2I,OAAQ,CACNC,OAAQ,UACR3I,MAAO,GACPD,OAAQ,QAINgL,GAAW,SAAC,GAAmC,IAAjClC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAC3BzB,EAAU7H,IACVH,EAAW0J,cAEjBC,qBAAU,WACJF,GAAcD,GAChBA,MAGD,CAACxJ,EAAS4J,WAEb,IAAMC,EACJ,kBAACC,EAAA,EAAD,CACEpJ,OAAO,OACPoG,QAAQ,OACRiD,cAAc,UAEd,kBAACD,EAAA,EAAD,CACEE,WAAW,SACXlD,QAAQ,OACRiD,cAAc,SACdE,EAAG,GAEH,kBAACC,EAAA,EAAD,CACEtC,UAAWI,EAAQqB,OACnBf,UAAWC,IACX4B,IAAKsB,EACLjD,GAAG,iBAEL,kBAAC4B,EAAA,EAAD,CACExC,UAAWI,EAAQqC,KACnBnD,MAAM,cACNoD,QAAQ,MAEPmB,GAEH,kBAACrB,EAAA,EAAD,CACElD,MAAM,gBACNoD,QAAQ,SAEPmB,IAGL,kBAAClB,EAAA,EAAD,MACA,kBAACT,EAAA,EAAD,CAAKG,EAAG,GACN,kBAACO,EAAA,EAAD,KACG7B,EAAM8B,KAAI,SAAC5D,GAAD,OACT,kBAAC,EAAD,CACEgB,KAAMhB,EAAKgB,KACX6C,IAAK7D,EAAKY,MACVA,MAAOZ,EAAKY,MACZH,KAAMT,EAAKS,YAKnB,kBAACwC,EAAA,EAAD,CAAKa,SAAU,IACf,kBAACb,EAAA,EAAD,CACEG,EAAG,EACHW,EAAG,EACHC,QAAQ,mBAER,kBAACT,EAAA,EAAD,CACEU,MAAM,SACNC,cAAY,EACZT,QAAQ,MAHV,gBAOA,kBAACF,EAAA,EAAD,CACEU,MAAM,SACNR,QAAQ,SAFV,oBAMA,kBAACR,EAAA,EAAD,CACEhD,QAAQ,OACRM,eAAe,SACf4D,GAAI,GAEJ,kBAAC5C,EAAA,EAAD,CACElB,MAAM,UACNoB,UAAU,IACVT,KAAK,IACLyC,QAAQ,aAJV,aAaR,OACE,oCACE,kBAACW,EAAA,EAAD,CAAQC,MAAI,GACV,kBAACC,EAAA,EAAD,CACEC,OAAO,QACPpD,QAAS,CAAEtC,MAAOsC,EAAQmB,cAC1BkC,QAAS7B,EACT8B,KAAM7B,EACNa,QAAQ,aAEPT,IAGL,kBAACoB,EAAA,EAAD,CAAQM,QAAM,GACZ,kBAACJ,EAAA,EAAD,CACEC,OAAO,QACPpD,QAAS,CAAEtC,MAAOsC,EAAQoB,eAC1BkC,MAAI,EACJhB,QAAQ,cAEPT,MAYX6B,GAASF,aAAe,CACtBhC,cAAe,aACfC,YAAY,GAGCiC,U,4DCnNAC,GAVF,SAACC,GACZ,OACE,uCACEC,IAAI,OACJ1B,IAAI,qBACAyB,K,4GCmBJH,GACI,uCAKJK,GAAaC,aAAW,CAC5BrG,MAAO,CACLsG,OAAQ,sBAFOD,EAIhB,SAACH,GAAD,OACD,kBAAC,KAAD,eACEK,mBAAmB,EACnBC,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACV5J,WAAY,UAEd6J,gBAAiB,CACfD,SAAU,MACV5J,WAAY,WAEVmJ,OAIFzL,GAAYC,aAAW,iBAAO,CAClCmM,KAAM,GACNlD,OAAQ,CACNC,OAAQ,UACR3I,MAAO,GACPD,OAAQ,GACR,UAAW,CACT8L,UAAW,6BAKXC,GAAiBV,cAAW,SAAC9G,GAAD,MAAY,CAC5CsH,KAAM,MADeR,CASnBW,MAEW,SAASC,KAAY,IAAD,EACDC,mBAAS,MADR,mBAC1BC,EAD0B,KAChBC,EADgB,KAO3BC,EAAc,WAClBD,EAAY,OAGR9E,EAAU7H,KAEhB,OACE,6BACE,kBAAC+J,EAAA,EAAD,CACEtC,UAAWI,EAAQqB,OAEnBc,IAAKsB,GACLuB,QAhBc,SAACC,GACnBH,EAAYG,EAAMC,kBAiBhB,kBAACpB,GAAD,CACEqB,GAAG,kBACHN,SAAUA,EACVO,aAAW,EACX9B,KAAMxL,QAAQ+M,GACdxB,QAAS0B,EACTC,QAASD,GAET,kBAACN,GAAD,CAAgBnE,UAAWC,IAAYC,GAAG,YACxC,kBAAC6E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYjH,SAAS,WAEvB,kBAACkH,GAAA,EAAD,CAAc5H,QAAQ,aAGxB,kBAAC8G,GAAD,CAAgBnE,UAAWC,IAAYC,GAAG,UACxC,kBAAC6E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYjH,SAAS,WAEvB,kBAACkH,GAAA,EAAD,CAAc5H,QAAQ,WAGxB,kBAAC8G,GAAD,CAAgBnE,UAAWC,IAAYC,GAAG,aACxC,kBAAC6E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYjH,SAAS,WAEvB,kBAACkH,GAAA,EAAD,CAAc5H,QAAQ,cAGxB,kBAAC8G,GAAD,CAAgBnE,UAAWC,IAAYC,GAAG,OACxC,kBAAC6E,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAMnH,SAAS,WAEjB,kBAACkH,GAAA,EAAD,CAAc5H,QAAQ,QAGxB,kBAAC8G,GAAD,CAAgBnE,UAAWC,IAAYC,GAAG,aACxC,kBAAC6E,GAAA,EAAD,KACE,kBAACI,GAAA,EAAD,CAAWpH,SAAS,WAEtB,kBAACkH,GAAA,EAAD,CAAc5H,QAAQ,cAGxB,kBAAC8G,GAAD,CAAgBnE,UAAWC,IAAYC,GAAG,aACxC,kBAAC6E,GAAA,EAAD,KACE,kBAACK,GAAA,EAAD,CAAQrH,SAAS,WAEnB,kBAACkH,GAAA,EAAD,CAAc5H,QAAQ,cAGxB,kBAAC8G,GAAD,CAAgBnE,UAAWC,IAAYC,GAAG,aACxC,kBAAC6E,GAAA,EAAD,KACE,kBAACM,GAAA,EAAD,CAAUtH,SAAS,WAErB,kBAACkH,GAAA,EAAD,CAAc5H,QAAQ,cAGxB,kBAAC8G,GAAD,CAAgBnE,UAAWC,IAAYC,GAAG,WACxC,kBAAC6E,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CAAWvH,SAAS,WAEtB,kBAACkH,GAAA,EAAD,CAAc5H,QAAQ,cCnIhC,IAAMxF,GAAYC,aAAW,iBAAO,CAClCmM,KAAM,OA2DOsB,GAxDA,SAAC,GAIT,IAHLjG,EAGI,EAHJA,UACAkG,EAEI,EAFJA,gBACG/F,EACC,+CAEAC,EAAU7H,KAFV,EAGkByM,mBAAS,IAA1BmB,EAHD,oBAKJ,OACE,kBAACC,GAAA,EAAD,eACEpG,UAAWM,YAAKF,EAAQuE,KAAM3E,GAC9BsE,UAAW,GACPnE,GAEJ,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAYS,GAAG,aACb,kBAAC,GAAD,OAEF,kBAACsB,EAAA,EAAD,CAAKa,SAAU,IACf,kBAACM,EAAA,EAAD,CAAQM,QAAM,GACZ,kBAAC0C,GAAA,EAAD,CAAY/G,MAAM,WAChB,kBAACgH,GAAA,EAAD,CACEC,aAAcJ,EAAcK,OAC5BlH,MAAM,UACNoD,QAAQ,OAER,kBAAC,KAAD,QAGJ,kBAAC2D,GAAA,EAAD,CAAY/G,MAAM,UAAUmH,MAAO,CAAC9G,YAAY,QAC9C,kBAACsB,EAAA,EAAD,CAASyF,gBAAc,cAAcC,gBAAc,UAGrD,kBAAC5B,GAAD,OAIF,kBAAC1B,EAAA,EAAD,CAAQC,MAAI,GACV,kBAAC+C,GAAA,EAAD,CACE/G,MAAM,UACN8F,QAASc,GAET,kBAACU,GAAA,EAAD,WCnENrO,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ1L,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1CyB,QAAS,OACTpG,OAAQ,OAERC,MAAO,QAET8N,QAAQ,aACN3H,QAAS,OACT4H,KAAM,WAEN3H,WAAY,IACX9B,EAAM0J,YAAYC,GAAG,MAAQ,CAC5BC,YAAa,IACbC,aAAc,MAGlBC,iBAAkB,CAChBjI,QAAS,OACT4H,KAAM,WAGFtH,eAAgB,UAEtByC,QAAS,CACP6E,KAAM,WACNhO,OAAQ,OAGJsO,SAAU,aA6BHC,GAzBS,WACtB,IAAMjH,EAAU7H,KADY,EAEgByM,oBAAS,GAFzB,mBAErBsC,EAFqB,KAEJC,EAFI,KAI5B,OACE,yBAAKvH,UAAWI,EAAQuE,MACtB,kBAAC,GAAD,CAAQuB,gBAAiB,kBAAMqB,GAAiB,MAChD,kBAAC,EAAD,CACE3F,cAAe,kBAAM2F,GAAiB,IACtC1F,WAAYyF,IAEd,yBAAKtH,UAAWI,EAAQyG,SACtB,yBAAK7G,UAAWI,EAAQ+G,kBACtB,yBAAKnH,UAAWI,EAAQ6B,SACtB,kBAAC,IAAD,SAIN,kBAAC,GAAD,CACEuF,SAAS,gBCjDXjP,GAAYC,YAAY,CAC5BmM,KAAM,GACN8C,QAAS,CACP3O,OAAQ,MA0BGmN,GAtBA,SAAC,GAA4B,IAA1BjG,EAAyB,EAAzBA,UAAcG,EAAW,6BACnCC,EAAU7H,KAEhB,OACE,kBAAC6N,GAAA,EAAD,eACEpG,UAAWM,YAAKF,EAAQuE,KAAM3E,GAC9BsE,UAAW,GACPnE,GAEJ,kBAAC,KAAD,CAASH,UAAWI,EAAQqH,SAC1B,kBAAC,IAAD,CAAY7G,GAAG,KACb,kBAAC,GAAD,UCxBJrI,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ1L,gBAAiBoE,EAAME,QAAQC,WAAWE,QAC1CwB,QAAS,OACTpG,OAAQ,OACR4O,SAAU,SACV3O,MAAO,QAET8N,QAAS,CACP3H,QAAS,OACT4H,KAAM,WACNY,SAAU,SACVvI,WAAY,IAEdgI,iBAAkB,CAChBjI,QAAS,OACT4H,KAAM,WACNY,SAAU,UAEZzF,QAAS,CACP6E,KAAM,WACNhO,OAAQ,OACR4O,SAAU,YAqBCC,GAjBI,WACjB,IAAMvH,EAAU7H,KAEhB,OACE,yBAAKyH,UAAWI,EAAQuE,MACtB,kBAAC,GAAD,MACA,yBAAK3E,UAAWI,EAAQyG,SACtB,yBAAK7G,UAAWI,EAAQ+G,kBACtB,yBAAKnH,UAAWI,EAAQ6B,SACtB,kBAAC,IAAD,W,8BCbG2F,GAvBFC,sBAAW,WAIrBC,GAAS,IAHVC,EAGS,EAHTA,SAGS,IAFTlI,aAES,MAFD,GAEC,EADNM,EACM,oCACT,OACE,uCACE2H,IAAKA,GACD3H,GAEJ,kBAAC6H,GAAA,EAAD,KACE,+BAAQnI,IAETkI,M,kDCDDlE,GACI,sCADJA,GAEE,cAFFA,GAGK,MAHLA,GAKE,iBALFA,GAMM,QAGNtL,GAAYC,aAAW,iBAAO,CAClCmM,KAAM,GACNlD,OAAQ,CACN3I,OAAQ,IACRC,MAAO,SA8DIkP,GA1DC,SAAC,GAA4B,IAA1BjI,EAAyB,EAAzBA,UAAcG,EAAW,6BACpCC,EAAU7H,KAEhB,OACE,kBAAC2P,GAAA,EAAD,eACElI,UAAWM,YAAKF,EAAQuE,KAAM3E,IAC1BG,GAEJ,kBAACgI,GAAA,EAAD,KACE,kBAACjG,EAAA,EAAD,CACEE,WAAW,SACXlD,QAAQ,OACRiD,cAAc,UAEd,kBAACG,EAAA,EAAD,CACEtC,UAAWI,EAAQqB,OACnBc,IAAKsB,KAEP,kBAACrB,EAAA,EAAD,CACElD,MAAM,cACN6D,cAAY,EACZT,QAAQ,MAEPmB,IAEH,kBAACrB,EAAA,EAAD,CACElD,MAAM,gBACNoD,QAAQ,SAFV,UAIMmB,GAJN,YAImBA,KAEnB,kBAACrB,EAAA,EAAD,CACExC,UAAWI,EAAQgI,SACnB9I,MAAM,gBACNoD,QAAQ,SAHV,UAKM2F,OAASC,OAAO,WALtB,YAKoCzE,OAIxC,kBAAClB,EAAA,EAAD,MACA,kBAAC4F,GAAA,EAAD,KACE,kBAAC/H,EAAA,EAAD,CACElB,MAAM,UACNkJ,WAAS,EACT9F,QAAQ,QAHV,qB,6BC5DF+F,GAAS,CACb,CACEC,MAAO,UACPC,MAAO,WAET,CACED,MAAO,WACPC,MAAO,YAET,CACED,MAAO,gBACPC,MAAO,kBAILpQ,GAAYC,aAAW,iBAAO,CAClCmM,KAAM,OAqKOiE,GAlKQ,SAAC,GAA4B,IAA1B5I,EAAyB,EAAzBA,UAAcG,EAAW,6BAC3CC,EAAU7H,KADiC,EAErByM,mBAAS,CACnC6D,UAAW,WACXC,SAAU,QACVC,MAAO,iBACPC,MAAO,GACPC,MAAO,UACPC,QAAS,QARsC,mBAE1CC,EAF0C,KAElCC,EAFkC,KAW3CC,EAAe,SAAChE,GACpB+D,EAAU,6BACLD,GADI,kBAEN9D,EAAMiE,OAAO7G,KAAO4C,EAAMiE,OAAOZ,UAItC,OACE,wCACEa,aAAa,MACbC,YAAU,EACVxJ,UAAWM,YAAKF,EAAQuE,KAAM3E,IAC1BG,GAEJ,kBAAC+H,GAAA,EAAD,KACE,kBAACuB,GAAA,EAAD,CACEC,UAAU,gCACV7J,MAAM,YAER,kBAAC8C,EAAA,EAAD,MACA,kBAACwF,GAAA,EAAD,KACE,kBAACwB,GAAA,EAAD,CACEC,WAAS,EACThK,QAAS,GAET,kBAAC+J,GAAA,EAAD,CACE1K,MAAI,EACJ4K,GAAI,EACJC,GAAI,IAEJ,kBAACC,GAAA,EAAD,CACEvB,WAAS,EACTwB,WAAW,gCACXrB,MAAM,aACNlG,KAAK,YACLwH,SAAUZ,EACVa,UAAQ,EACRxB,MAAOS,EAAON,UACdnG,QAAQ,cAGZ,kBAACiH,GAAA,EAAD,CACE1K,MAAI,EACJ4K,GAAI,EACJC,GAAI,IAEJ,kBAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,YACNlG,KAAK,WACLwH,SAAUZ,EACVa,UAAQ,EACRxB,MAAOS,EAAOL,SACdpG,QAAQ,cAGZ,kBAACiH,GAAA,EAAD,CACE1K,MAAI,EACJ4K,GAAI,EACJC,GAAI,IAEJ,kBAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,gBACNlG,KAAK,QACLwH,SAAUZ,EACVa,UAAQ,EACRxB,MAAOS,EAAOJ,MACdrG,QAAQ,cAGZ,kBAACiH,GAAA,EAAD,CACE1K,MAAI,EACJ4K,GAAI,EACJC,GAAI,IAEJ,kBAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,eACNlG,KAAK,QACLwH,SAAUZ,EACVc,KAAK,SACLzB,MAAOS,EAAOH,MACdtG,QAAQ,cAGZ,kBAACiH,GAAA,EAAD,CACE1K,MAAI,EACJ4K,GAAI,EACJC,GAAI,IAEJ,kBAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,UACNlG,KAAK,UACLwH,SAAUZ,EACVa,UAAQ,EACRxB,MAAOS,EAAOD,QACdxG,QAAQ,cAGZ,kBAACiH,GAAA,EAAD,CACE1K,MAAI,EACJ4K,GAAI,EACJC,GAAI,IAEJ,kBAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,eACNlG,KAAK,QACLwH,SAAUZ,EACVa,UAAQ,EACRE,QAAM,EACNC,YAAa,CAAEC,QAAQ,GACvB5B,MAAOS,EAAOF,MACdvG,QAAQ,YAEP+F,GAAO5F,KAAI,SAAC0H,GAAD,OACV,4BACEzH,IAAKyH,EAAO7B,MACZA,MAAO6B,EAAO7B,OAEb6B,EAAO5B,cAOpB,kBAAChG,EAAA,EAAD,MACA,kBAACT,EAAA,EAAD,CACEhD,QAAQ,OACRM,eAAe,WACf6C,EAAG,GAEH,kBAAC7B,EAAA,EAAD,CACElB,MAAM,UACNoD,QAAQ,aAFV,oBC1KJnK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ1L,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C+M,UAAW,OACXpL,cAAe/B,EAAMuC,QAAQ,GAC7BT,WAAY9B,EAAMuC,QAAQ,QAuCf6K,GAnCC,WACd,IAAMrK,EAAU7H,KAEhB,OACE,kBAAC,GAAD,CACEyH,UAAWI,EAAQuE,KACnB9E,MAAM,WAEN,kBAAC6K,GAAA,EAAD,CAAWtD,SAAS,MAClB,kBAACuC,GAAA,EAAD,CACEC,WAAS,EACThK,QAAS,GAET,kBAAC+J,GAAA,EAAD,CACE1K,MAAI,EACJ0L,GAAI,EACJd,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAACH,GAAA,EAAD,CACE1K,MAAI,EACJ0L,GAAI,EACJd,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,W,2FCzBNvR,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,GACNlD,OAAQ,CACN9B,YAAatC,EAAMuC,QAAQ,QA6JhBgL,GAzJC,SAAC,GAAuC,IAArC5K,EAAoC,EAApCA,UAAW6K,EAAyB,EAAzBA,UAAc1K,EAAW,yCAC/CC,EAAU7H,KADqC,EAECyM,mBAAS,IAFV,mBAE9C8F,EAF8C,KAEzBC,EAFyB,OAG3B/F,mBAAS,IAHkB,mBAG9CgG,EAH8C,KAGvCC,EAHuC,OAI7BjG,mBAAS,GAJoB,mBAI9CkG,EAJ8C,KAIxCC,EAJwC,KA8CrD,OACE,kBAACjD,GAAA,EAAD,eACElI,UAAWM,YAAKF,EAAQuE,KAAM3E,IAC1BG,GAEJ,kBAAC,KAAD,KACE,kBAAC+B,EAAA,EAAD,CAAKkJ,SAAU,MACb,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAW5S,QAAQ,YACjB,kBAAC6S,GAAA,EAAD,CACEC,QAASZ,EAAoBtE,SAAWqE,EAAUrE,OAClDlH,MAAM,UACNqM,cACEb,EAAoBtE,OAAS,GAC1BsE,EAAoBtE,OAASqE,EAAUrE,OAE5CyD,SA1DM,SAAC5E,GACvB,IAAIuG,EAGFA,EADEvG,EAAMiE,OAAOoC,QACUb,EAAUhI,KAAI,SAACgJ,GAAD,OAAcA,EAAStG,MAErC,GAG3BwF,EAAuBa,OAoDX,kBAACJ,GAAA,EAAD,aAGA,kBAACA,GAAA,EAAD,cAGA,kBAACA,GAAA,EAAD,iBAGA,kBAACA,GAAA,EAAD,cAGA,kBAACA,GAAA,EAAD,4BAKJ,kBAACM,GAAA,EAAD,KACGjB,EAAUkB,MAAM,EAAGf,GAAOnI,KAAI,SAACgJ,GAAD,OAC7B,kBAACN,GAAA,EAAD,CACES,OAAK,EACLlJ,IAAK+I,EAAStG,GACd0G,UAAwD,IAA9CnB,EAAoB7O,QAAQ4P,EAAStG,KAE/C,kBAACiG,GAAA,EAAD,CAAW5S,QAAQ,YACjB,kBAAC6S,GAAA,EAAD,CACEC,SAAuD,IAA9CZ,EAAoB7O,QAAQ4P,EAAStG,IAC9C0E,SAAU,SAAC5E,GAAD,OA5EN,SAACA,EAAOE,GAC9B,IAAM2G,EAAgBpB,EAAoB7O,QAAQsJ,GAC9CqG,EAAyB,IAEN,IAAnBM,EACFN,EAAyBA,EAAuBO,OAAOrB,EAAqBvF,GACjD,IAAlB2G,EACTN,EAAyBA,EAAuBO,OAAOrB,EAAoBiB,MAAM,IACxEG,IAAkBpB,EAAoBtE,OAAS,EACxDoF,EAAyBA,EAAuBO,OAAOrB,EAAoBiB,MAAM,GAAI,IAC5EG,EAAgB,IACzBN,EAAyBA,EAAuBO,OAC9CrB,EAAoBiB,MAAM,EAAGG,GAC7BpB,EAAoBiB,MAAMG,EAAgB,KAI9CnB,EAAuBa,GA2DgBQ,CAAgB/G,EAAOwG,EAAStG,KACrDmD,MAAM,UAGV,kBAAC8C,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CACEE,WAAW,SACXlD,QAAQ,QAER,kBAACoD,EAAA,EAAD,CACEtC,UAAWI,EAAQqB,OACnBc,IAAKsJ,EAASQ,WCrIvB,eAAC5J,EAAD,uDAAQ,GAAR,OAAeA,EAC3B6J,QAAQ,MAAO,KACfC,MAAM,KACNR,MAAM,EAAG,GACTlJ,KAAI,SAAC2J,GAAD,OAAOA,GAAKA,EAAE,GAAGC,iBACrBC,KAAK,IDkIiBC,CAAYd,EAASpJ,OAExB,kBAACD,EAAA,EAAD,CACElD,MAAM,cACNoD,QAAQ,SAEPmJ,EAASpJ,QAIhB,kBAAC+I,GAAA,EAAD,KACGK,EAAS9C,OAEZ,kBAACyC,GAAA,EAAD,eACMK,EAASe,QAAQC,KADvB,aACgChB,EAASe,QAAQ3D,MADjD,aAC2D4C,EAASe,QAAQ1D,UAE5E,kBAACsC,GAAA,EAAD,KACGK,EAAS7C,OAEZ,kBAACwC,GAAA,EAAD,KACGnD,KAAOwD,EAASiB,WAAWxE,OAAO,uBAQjD,kBAACyE,GAAA,EAAD,CACErM,UAAU,MACVsM,MAAOnC,EAAUrE,OACjByG,aAhGmB,SAAC5H,EAAO6H,GAC/B/B,EAAQ+B,IAgGJC,oBArGoB,SAAC9H,GACzB4F,EAAS5F,EAAMiE,OAAOZ,QAqGlBwC,KAAMA,EACNkC,YAAapC,EACbqC,mBAAoB,CAAC,EAAG,GAAI,Q,8BE3J9B9U,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,GACN2I,aAAc,CACZ3N,YAAatC,EAAMuC,QAAQ,IAE7B2N,aAAc,CACZ5N,YAAatC,EAAMuC,QAAQ,QA8DhB4N,GA1DC,SAAC,GAA4B,IAA1BxN,EAAyB,EAAzBA,UAAcG,EAAW,6BACpCC,EAAU7H,KAEhB,OACE,uCACEyH,UAAWM,YAAKF,EAAQuE,KAAM3E,IAC1BG,GAEJ,kBAAC+B,EAAA,EAAD,CACEhD,QAAQ,OACRM,eAAe,YAEf,kBAACgB,EAAA,EAAD,CAAQR,UAAWI,EAAQkN,cAA3B,UAGA,kBAAC9M,EAAA,EAAD,CAAQR,UAAWI,EAAQmN,cAA3B,UAGA,kBAAC/M,EAAA,EAAD,CACElB,MAAM,UACNoD,QAAQ,aAFV,iBAOF,kBAACR,EAAA,EAAD,CAAKkB,GAAI,GACP,kBAAC8E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACjG,EAAA,EAAD,CAAKkF,SAAU,KACb,kBAAC2C,GAAA,EAAD,CACEvB,WAAS,EACTiF,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACC,GAAA,EAAD,CACEpP,SAAS,QACTa,MAAM,UAEN,kBAAC,KAAD,SAKRwO,YAAY,kBACZpL,QAAQ,mB,UCnET,IACb,CACE6C,GAAIwI,eACJnB,QAAS,CACP1D,QAAS,MACTD,MAAO,gBACP4D,KAAM,cACNmB,OAAQ,sBAEV3B,UAAW,sCACXS,UAAW,WACX/D,MAAO,8BACPtG,KAAM,oBACNuG,MAAO,gBAET,CACEzD,GAAIwI,eACJnB,QAAS,CACP1D,QAAS,MACTD,MAAO,UACP4D,KAAM,OACNmB,OAAQ,4BAEV3B,UAAW,sCACXS,UAAW,WACX/D,MAAO,mBACPtG,KAAM,SACNuG,MAAO,gBAET,CACEzD,GAAIwI,eACJnB,QAAS,CACP1D,QAAS,MACTD,MAAO,UACP4D,KAAM,UACNmB,OAAQ,6BAEV3B,UAAW,sCACXS,UAAW,WACX/D,MAAO,6BACPtG,KAAM,mBACNuG,MAAO,gBAET,CACEzD,GAAIwI,eACJnB,QAAS,CACP1D,QAAS,MACTD,MAAO,OACP4D,KAAM,QACNmB,OAAQ,sBAEV3B,UAAW,sCACXS,UAAW,SACX/D,MAAO,wBACPtG,KAAM,cACNuG,MAAO,gBAET,CACEzD,GAAIwI,eACJnB,QAAS,CACP1D,QAAS,MACTD,MAAO,QACP4D,KAAM,SACNmB,OAAQ,SAEV3B,UAAW,sCACXS,UAAW,WACX/D,MAAO,6BACPtG,KAAM,mBACNuG,MAAO,gBAET,CACEzD,GAAIwI,eACJnB,QAAS,CACP1D,QAAS,MACTD,MAAO,aACP4D,KAAM,aACNmB,OAAQ,kBAEV3B,UAAW,sCACXS,UAAW,WACX/D,MAAO,yBACPtG,KAAM,eACNuG,MAAO,gBAET,CACEzD,GAAIwI,eACJnB,QAAS,CACP1D,QAAS,MACTD,MAAO,aACP4D,KAAM,gBACNmB,OAAQ,0BAEV3B,UAAW,sCACXS,UAAW,WACX/D,MAAO,0BACPtG,KAAM,gBACNuG,MAAO,gBAET,CACEzD,GAAIwI,eACJnB,QAAS,CACP1D,QAAS,MACTD,MAAO,SACP4D,KAAM,YACNmB,OAAQ,6BAEV3B,UAAW,sCACXS,UAAW,WACX/D,MAAO,6BACPtG,KAAM,mBACNuG,MAAO,gBAET,CACEzD,GAAIwI,eACJnB,QAAS,CACP1D,QAAS,MACTD,MAAO,WACP4D,KAAM,UACNmB,OAAQ,uBAEV3B,UAAW,sCACXS,UAAW,WACX/D,MAAO,2BACPtG,KAAM,iBACNuG,MAAO,gBAET,CACEzD,GAAIwI,eACJnB,QAAS,CACP1D,QAAS,MACTD,MAAO,OACP4D,KAAM,iBACNmB,OAAQ,4BAEV3B,UAAW,uCACXS,UAAW,WACX/D,MAAO,4BACPtG,KAAM,kBACNuG,MAAO,iBClILzQ,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ1L,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C+M,UAAW,OACXpL,cAAe/B,EAAMuC,QAAQ,GAC7BT,WAAY9B,EAAMuC,QAAQ,QAuBfqO,GAnBG,WAChB,IAAM7N,EAAU7H,KADM,EAEFyM,mBAASkJ,IAAtBrD,EAFe,oBAItB,OACE,kBAAC,GAAD,CACE7K,UAAWI,EAAQuE,KACnB9E,MAAM,aAEN,kBAAC6K,GAAA,EAAD,CAAWtD,UAAU,GACnB,kBAAC,GAAD,MACA,kBAAClF,EAAA,EAAD,CAAKkB,GAAI,GACP,kBAAC,GAAD,CAASyH,UAAWA,Q,qNCSNsD,KAAUC,KAAUC,KAE5C,SAASC,GAAStK,GAChB,IAAMmG,EAAOnG,EAAMmG,KACnB,MAAU,YAANA,EAEF,kBAAC,IAAMoE,SAAP,KACE,kBAAC,KAAD,MADF,IAEE,kBAAC/L,EAAA,EAAD,mBAMW,YAAN2H,EACA,kBAAC,KAAD,MAEM,QAANA,EACA,kBAAC,KAAD,WADJ,EAUP,IAAM5R,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJzF,QAAS,OACTiD,cAAe,UAEjBqM,UAAW,CACTpM,WAAY,SACZlD,QAAS,QAEXuP,UAAW,CACT9O,YAAatC,EAAMuC,QAAQ,IAE7B8O,SAAU,CACRlQ,WAAY,OACZc,MAAM,WAERqP,UAAW,CACTC,aAAa,MACbjP,YAAY,YAIVkP,GAAc1K,cAAW,SAAC9G,GAAD,MAAY,CACzCyR,MAAO,CACLjV,OAAQ,GACRC,IAAK,EACLsK,OAAO,aAAD,OAAe/G,EAAME,QAAQC,WAAWM,OAC9ClF,QAAS,YALOuL,CAOhBmC,MAoOWyI,GAlOE,SAAC,GAAkC,IAAhC/O,EAA+B,EAA/BA,UAAWgP,EAAoB,EAApBA,KAAS7O,EAAW,oCAC3CC,EAAU7H,KAEhB,OACE,kBAAC2P,GAAA,EAAD,eAAMzB,MAAO,CAACmH,SAAS,WAAYlG,SAAS,WAC1C1H,UAAWM,YAAKF,EAAQuE,KAAM3E,IAC1BG,GAGJ,kBAACgI,GAAA,EAAD,KAEA,kBAACD,GAAA,EAAD,CAAMzB,MAAO,CAACmH,SAAS,WAAY9T,IAAI,MAAOF,KAAK,QAAShB,QAAQ,aACpE,kBAACiV,GAAA,EAAD,CACQpP,SAAS,SACTa,MAAM,UAEN,kBAACgP,GAAD,CAAUnE,KAAM6E,EAAKC,aAI3B,kBAAC/M,EAAA,EAAD,CACEhD,QAAQ,OACRM,eAAe,OACf4C,WAAW,SACX8M,GAAI,EACJzI,MAAO,CAACmH,SAAU,aAElB,kBAACtL,EAAA,EAAD,CACEtC,UAAWI,EAAQuO,UACnB1K,IAAI,aACJ1B,IAAG,wCAAmCyM,EAAKnL,KAAxC,QACHnB,QAAQ,WAGR,kBAACR,EAAA,EAAD,CACEhD,QAAQ,QACRM,eAAe,OACf2C,cAAc,MACdC,WAAW,MACX+M,WAAY,GAEZ,kBAAC3M,EAAA,EAAD,CAAYtD,QAAQ,QAAQc,UAAWI,EAAQsO,SAAUpP,MAAM,gBAAgB0D,EAAG,GAAIX,EAAG,GAAI8M,WAAY,GAAzG,iBAIA,kBAAC3M,EAAA,EAAD,CAAYtD,QAAQ,QACpBI,MAAM,gBACN0D,EAAG,EACHX,EAAG,EACH8M,WAAY,EACZzM,QAAQ,SALR,8BAYF,kBAACR,EAAA,EAAD,CACEhD,QAAQ,QACRM,eAAe,QACf2C,cAAc,cACdC,WAAW,SACXqE,MAAO,CAACmH,SAAU,WAAY9T,IAAI,EAAGD,MAAO,IAE9C,kBAAC2I,EAAA,EAAD,CAAYtD,QAAQ,QAAQI,MAAM,gBAAgB0D,EAAG,EAAGX,EAAG,EAAG8M,WAAY,GACxE,kBAACC,GAAA,EAAD,CACAnP,KAAK,KAEL,kBAAC,KAAD,UAON,kBAACuC,EAAA,EAAD,CACEU,MAAM,SACN5D,MAAM,cACN6D,cAAY,EACZT,QAAQ,MAEPsM,EAAKnP,QAKX,kBAACwP,GAAA,EAAD,CACGrP,UAAWI,EAAQkP,MACnB5O,UAAU,MACV6B,IAAG,mCAA8ByM,EAAKO,WACtC1P,MAAM,aAGd,kBAACsI,GAAA,EAAD,KACQ,kBAAC3F,EAAA,EAAD,CACEU,MAAM,OACN5D,MAAM,cACNoD,QAAQ,SAEPsM,EAAKhW,OAKV,kBAACkJ,EAAA,EAAD,CAAKa,SAAU,IACf,kBAACJ,EAAA,EAAD,MACA,kBAACT,EAAA,EAAD,CAAKG,EAAG,GACN,kBAACsH,GAAA,EAAD,CACEC,WAAS,EACT4F,QAAQ,gBACR5P,QAAS,GAET,kBAAC+J,GAAA,EAAD,CACE3J,UAAWI,EAAQoO,UACnBvP,MAAI,GAKR,kBAACoH,GAAA,EAAD,CAAYoJ,aAAW,OAAOpN,EAAG,EAAGxC,MAAM,UAAU4G,MAAO,CAAC7N,QAAQ,MAAO+G,YAAY,SACrF,kBAACkP,GAAD,CAAatI,aAAa,KAAKjH,MAAM,aACnC,kBAAC,KAAD,QAIJ,kBAAC+G,GAAA,EAAD,CAAYoJ,aAAW,OAAOpN,EAAG,EAAGxC,MAAM,YAAY4G,MAAO,CAAC7N,QAAQ,MAClE,kBAAC,KAAD,OA+BA,kBAACsJ,EAAA,EAAD,CACAhD,QAAQ,OACRgE,MAAM,OACNd,WAAW,SACXsN,GAAI,GAEF,kBAAC,KAAD,CACE1P,UAAWI,EAAQqO,UACnBnP,MAAM,WAER,kBAACkD,EAAA,EAAD,CACElD,MAAM,gBACNJ,QAAQ,SACRwD,QAAQ,SAHV,gBASF,kBAACR,EAAA,EAAD,CACAhD,QAAQ,OACRgE,MAAM,OACNd,WAAW,SACXsN,GAAI,GAEF,kBAAC,KAAD,CACEpQ,MAAM,WAER,kBAACkD,EAAA,EAAD,CACElD,MAAM,gBACNJ,QAAQ,SACRwD,QAAQ,SAHV,aAKa,OAKjB,kBAACiH,GAAA,EAAD,CACE3J,UAAWI,EAAQoO,UACnBvP,MAAI,GAEJ,kBAAC,KAAD,CACEe,UAAWI,EAAQqO,UACnBnP,MAAM,WAER,kBAACkD,EAAA,EAAD,CACElD,MAAM,gBACNJ,QAAQ,SACRwD,QAAQ,SAEPsM,EAAKW,MACL,IANH,eCrJGC,G,oDA7Hb,WAAY5L,GAAQ,IAAD,+BACjB,cAAMA,IAEDiF,MAAQ,CACXiF,KAAM,GACN2B,UAAW,GACXC,WAAW,EACXC,MAAO,MAPQ,E,iEAWE,IAAD,OAClB1V,KAAK2V,SAAS,CAAEF,WAAW,IAO3BG,MA7BU,6BA6BI,CACVC,OAAQ,MAERC,QAAS,CAEP,cAAiB,6BAGjB,eAAgB,sBASnBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAlC,GAAI,OAAI,EAAK8B,SAAS,CAAEH,UAAW3B,EAAM4B,WAAW,OACzDS,OAAM,SAAAR,GAAK,OAAI,EAAKC,SAAS,CAAED,QAAOD,WAAW,S,+BAY5C,IAAD,EACiCzV,KAAK4O,MAArC4G,EADD,EACCA,UAAWC,EADZ,EACYA,UAAWC,EADvB,EACuBA,MAE9B,OAAIA,EACK,2BAAIA,EAAMS,SAGfV,EACK,0CAMT,kBAAC,GAAD,CACEjQ,MAAM,SAEN,kBAAC6K,GAAA,EAAD,CAAWtD,UAAU,GAEnB,kBAAClF,EAAA,EAAD,CAAKkB,GAAI,GACP,kBAACuG,GAAA,EAAD,CACEC,WAAS,EACThK,QAAS,GAERiQ,EAAUY,QAAQ5N,KAAI,SAACmM,GAAD,OACrB,kBAACrF,GAAA,EAAD,CACE1K,MAAI,EACJ6D,IAAKkM,EAAKzJ,GACVoF,GAAI,GACJd,GAAI,GACJC,GAAI,IAEJ,kBAAC,GAAD,CACEkF,KAAMA,UAMhB,kBAAC9M,EAAA,EAAD,CACEkB,GAAI,EACJlE,QAAQ,OACRM,eAAe,UAEf,kBAACkR,GAAA,EAAD,CACEpR,MAAM,UACN0N,MAAO,EACPnM,KAAK,iB,GAlGC8P,a,UCZZpY,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,GACN2I,aAAc,CACZ3N,YAAatC,EAAMuC,QAAQ,IAE7B2N,aAAc,CACZ5N,YAAatC,EAAMuC,QAAQ,QA4ChB4N,GAxCC,SAAC,GAA2B,EAAzBxN,UAAyB,6BAC1BzH,KAEhB,OAEI,kBAAC2J,EAAA,EAAD,CACIuE,MAAO,CAAC1N,MAAM,SAEZ,kBAACmJ,EAAA,EAAD,KACE,kBAAC6H,GAAA,EAAD,CACElJ,KAAK,QACL2H,WAAS,EACTiF,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACC,GAAA,EAAD,CACEpP,SAAS,QACTa,MAAM,UAEN,kBAAC,KAAD,SAKRwO,YAAY,uBACZpL,QAAQ,gBCxBlBnK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJzF,QAAS,OACTiD,cAAe,UAEjBqM,UAAW,CACTpM,WAAY,SACZlD,QAAS,QAEXuP,UAAW,CACT9O,YAAatC,EAAMuC,QAAQ,IAE7B8O,SAAU,CACRlQ,WAAY,OACZc,MAAM,WAERqP,UAAW,CACTC,aAAa,MACbjP,YAAY,YAiGDiR,GA7FF,SAAC,GAA4B,IAA1B5Q,EAAyB,EAAzBA,UAAcG,EAAW,6BACjCC,EAAU7H,KAEhB,OACE,kBAACmS,GAAA,EAAD,CAAWtD,UAAU,GAErB,kBAACc,GAAA,EAAD,eACElI,UAAWM,YAAKF,EAAQuE,KAAM3E,IAC1BG,GAEJ,kBAACgI,GAAA,EAAD,KACE,kBAACjG,EAAA,EAAD,CACEhD,QAAQ,OACRM,eAAe,OACf4C,WAAW,SACX8M,GAAI,EACJzI,MAAO,CAACmH,SAAU,aAElB,kBAACtL,EAAA,EAAD,CACEtC,UAAWI,EAAQuO,UACnB1K,IAAI,aACJ1B,IAAI,GACJG,QAAQ,WAGR,kBAAC,GAAD,OAIZ,kBAACC,EAAA,EAAD,MAEU,kBAACgH,GAAA,EAAD,CAAMlD,MAAO,CAACtH,WAAY,QACxB0R,UAAU,MACVrB,QAAQ,SACRpN,WAAW,SACXxC,QAAS,EACTgK,WAAS,GAGX,kBAACD,GAAA,EAAD,CAAM1K,MAAI,EAACwH,MAAO,CAACrH,cAAe,SAClC,kBAACoB,EAAA,EAAD,CAAQR,UAAWI,EAAQkN,aAEzB5K,QAAQ,aAFV,kBAImB,kBAACmL,GAAA,EAAD,CACfpP,SAAS,SAGT,kBAAC,KAAD,SAKJ,kBAACkL,GAAA,EAAD,CAAM1K,MAAI,EAACwH,MAAO,CAACrH,cAAe,SAClC,kBAACoB,EAAA,EAAD,CAAQR,UAAWI,EAAQmN,aAEzB7K,QAAQ,aAFV,oBAIqB,kBAACmL,GAAA,EAAD,CACjBpP,SAAS,SAGT,kBAAC,KAAD,SAKJ,kBAACkL,GAAA,EAAD,CAAM1K,MAAI,EAACwH,MAAO,CAACrH,cAAe,SAClC,kBAACoB,EAAA,EAAD,CAEEkC,QAAQ,aAFV,mBAIoB,kBAACmL,GAAA,EAAD,CAChBpP,SAAS,SAGT,kBAAC,KAAD,c,mCCpGIjG,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ1L,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C+M,UAAW,OACXpL,cAAe/B,EAAMuC,QAAQ,GAC7BT,WAAY9B,EAAMuC,QAAQ,QAITpH,YAAW,CAC9BmM,KAAM,CACJ,QAAS,CACPlJ,aAAc,YAKpB,SAASqV,GAAWrO,EAAMsO,EAAUC,EAAKC,EAAOC,EAASC,GACvD,MAAO,CACL1O,OACAsO,WACAC,MACAC,QACAC,UACAC,QACAC,QAAS,CACP,CAAEC,KAAM,gBAAiBC,WAAY,UAAWC,OAAQ,IAAKC,SAAS,GACtE,CAAEH,KAAM,gBAAiBC,WAAY,gBAAiBC,QAAS,EAAGC,SAAU,GAC5E,CAAEH,KAAM,OAAQC,WAAY,gBAAiBC,OAAQ,IAAKC,SAAU,GACpE,CAAEH,KAAM,gBAAiBC,WAAY,YAAaC,OAAQ,IAAKC,SAAU,KAkF7EV,GAAW,MAAO,IAAK,GAAI,OAAQ,UACnCA,GAAW,YAAa,IAAK,EAAG,OAAQ,WACxCA,GAAW,OAAQ,IAAK,IAAK,QAAS,UACtCA,GAAW,WAAY,IAAK,GAAI,OAAQ,UACxCA,GAAW,eAAgB,IAAK,GAAG,QAAS,U,OC3H5BtY,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ7L,OAAQ,QAEV2I,OAAQ,CACNxI,gBAAiB0E,IAAO8T,IAAI,KAC5B3Y,OAAQ,GACRC,MAAO,IAET2Y,eAAgB,CACdpS,MAAO3B,IAAO8T,IAAI,MAEpBE,gBAAiB,CACfrS,MAAO3B,IAAO8T,IAAI,KAClB9R,YAAatC,EAAMuC,QAAQ,Q,4BCJvBmO,eAUAA,eAUAA,eAUAA,eAUAA,eAUAA,eAWUvV,aAAW,iBAAO,CAClCmM,KAAM,GACNiN,QAAS,CACPpS,eAAgB,gB,cCnEZuO,eAGO1F,OAASwJ,SAAS,EAAG,SAG5B9D,eAGO1F,OAASwJ,SAAS,EAAG,SAG5B9D,eAGO1F,OAASwJ,SAAS,EAAG,SAG5B9D,eAGO1F,OAASwJ,SAAS,EAAG,SAG5B9D,eAGO1F,OAASwJ,SAAS,EAAG,SAIlBrZ,YAAY,CAC5BmM,KAAM,CACJ7L,OAAQ,QAEVgZ,MAAO,CACLhZ,OAAQ,GACRC,MAAO,M,aC1COP,aAAW,iBAAO,CAClCmM,KAAM,O,cCHUnM,aAAW,iBAAO,CAClCmM,KAAM,CACJ7L,OAAQ,QAEV2I,OAAQ,CACNxI,gBAAiB0E,IAAOoU,OAAO,KAC/BjZ,OAAQ,GACRC,MAAO,Q,OCPOP,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ7L,OAAQ,QAEV2I,OAAQ,CACNxI,gBAAiB0E,IAAOqU,MAAM,KAC9BlZ,OAAQ,GACRC,MAAO,IAET2Y,eAAgB,CACdpS,MAAO3B,IAAOqU,MAAM,MAEtBL,gBAAiB,CACfrS,MAAO3B,IAAOqU,MAAM,KACpBrS,YAAatC,EAAMuC,QAAQ,Q,OChBbpH,aAAW,iBAAO,CAClCmM,KAAM,CACJ7L,OAAQ,QAEV2I,OAAQ,CACNxI,gBAAiB0E,IAAOM,OAAO,KAC/BnF,OAAQ,GACRC,MAAO,Q,qBCFOP,aAAW,iBAAO,CAClCmM,KAAM,CACJ7L,OAAQ,YRiHZ,IS5EMP,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ1L,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C+M,UAAW,OACXpL,cAAe/B,EAAMuC,QAAQ,GAC7BT,WAAY9B,EAAMuC,QAAQ,QAgQfqS,GAtGG,WAChB,IAAM7R,EAAU7H,KAEhB,OACE,kBAAC,GAAD,CACEyH,UAAWI,EAAQuE,KACnB9E,MAAM,aAEN,kBAAC6K,GAAA,EAAD,CAAWtD,UAAU,GAEpB,kBAAC,GAAD,MAEC,6BAEA,kBAAC8K,GAAD,S,mBC5NOC,GARE,SAACnO,GAChB,OACE,kBAAC6J,GAAA,EAAY7J,EACX,0BAAMoO,EAAE,2mBCKCC,GARA,SAACrO,GACd,OACE,kBAAC6J,GAAA,EAAY7J,EACX,0BAAMoO,EAAE,y1CCYR7Z,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ1L,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C3E,OAAQ,OACRsG,cAAe/B,EAAMuC,QAAQ,GAC7BT,WAAY9B,EAAMuC,QAAQ,QAuKf0S,GAnKG,WAChB,IAAMlS,EAAU7H,KACVga,EAAWC,cAEjB,OACE,kBAAC,GAAD,CACExS,UAAWI,EAAQuE,KACnB9E,MAAM,SAEN,kBAACqC,EAAA,EAAD,CACEhD,QAAQ,OACRiD,cAAc,SACdrJ,OAAO,OACP0G,eAAe,UAEf,kBAACkL,GAAA,EAAD,CAAWtD,SAAS,MAClB,kBAAC,KAAD,CACEqL,cAAe,CACb1J,MAAO,iBACP2J,SAAU,eAEZC,iBAAkBC,OAAaC,MAAM,CACnC9J,MAAO6J,OAAa7J,MAAM,yBAAyB+J,IAAI,KAAK5I,SAAS,qBACrEwI,SAAUE,OAAaE,IAAI,KAAK5I,SAAS,0BAE3C6I,SAAU,WACRR,EAAS,iBAAkB,CAAEjG,SAAS,OAGvC,gBACC0G,EADD,EACCA,OACAC,EAFD,EAECA,WACA5J,EAHD,EAGCA,aACA6J,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAjK,EAPD,EAOCA,OAPD,OASC,0BAAM4J,SAAUG,GACd,kBAAChR,EAAA,EAAD,CAAKgN,GAAI,GACP,kBAAC1M,EAAA,EAAD,CACElD,MAAM,cACNoD,QAAQ,MAFV,WAMA,kBAACF,EAAA,EAAD,CACElD,MAAM,gBACN6D,cAAY,EACZT,QAAQ,SAHV,qCAQF,kBAACiH,GAAA,EAAD,CACEC,WAAS,EACThK,QAAS,GAET,kBAAC+J,GAAA,EAAD,CACE1K,MAAI,EACJ6K,GAAI,GACJD,GAAI,GAEJ,kBAACrJ,EAAA,EAAD,CACElB,MAAM,UACNkJ,WAAS,EACT6K,UAAW,kBAAC,GAAD,MACXjO,QAAS8N,EACTrS,KAAK,QACL6B,QAAQ,aANV,wBAWF,kBAACiH,GAAA,EAAD,CACE1K,MAAI,EACJ6K,GAAI,GACJD,GAAI,GAEJ,kBAACrJ,EAAA,EAAD,CACEgI,WAAS,EACT6K,UAAW,kBAAC,GAAD,MACXjO,QAAS8N,EACTrS,KAAK,QACL6B,QAAQ,aALV,uBAWJ,kBAACR,EAAA,EAAD,CACEkB,GAAI,EACJ8L,GAAI,GAEJ,kBAAC1M,EAAA,EAAD,CACEU,MAAM,SACN5D,MAAM,gBACNoD,QAAQ,SAHV,gCAQF,kBAACqH,GAAA,EAAD,CACEgG,MAAO7X,QAAQkb,EAAQrK,OAASiK,EAAOjK,OACvCP,WAAS,EACTwB,WAAYoJ,EAAQrK,OAASiK,EAAOjK,MACpCJ,MAAM,gBACNhQ,OAAO,SACP8J,KAAK,QACL6Q,OAAQL,EACRhJ,SAAUZ,EACVc,KAAK,QACLzB,MAAOS,EAAOJ,MACdrG,QAAQ,aAEV,kBAACqH,GAAA,EAAD,CACEgG,MAAO7X,QAAQkb,EAAQV,UAAYM,EAAON,UAC1ClK,WAAS,EACTwB,WAAYoJ,EAAQV,UAAYM,EAAON,SACvC/J,MAAM,WACNhQ,OAAO,SACP8J,KAAK,WACL6Q,OAAQL,EACRhJ,SAAUZ,EACVc,KAAK,WACLzB,MAAOS,EAAOuJ,SACdhQ,QAAQ,aAEV,kBAACR,EAAA,EAAD,CAAKqR,GAAI,GACP,kBAAC/S,EAAA,EAAD,CACElB,MAAM,UACNkU,SAAUL,EACV3K,WAAS,EACT3H,KAAK,QACLsJ,KAAK,SACLzH,QAAQ,aANV,gBAWF,kBAACF,EAAA,EAAD,CACElD,MAAM,gBACNoD,QAAQ,SAFV,yBAKG,IACD,kBAAC0M,GAAA,EAAD,CACE1O,UAAWC,IACXC,GAAG,YACH8B,QAAQ,MAHV,oBCpKZnK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ1L,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C3E,OAAQ,OACRsG,cAAe/B,EAAMuC,QAAQ,GAC7BT,WAAY9B,EAAMuC,QAAQ,IAE5BkS,MAAO,CACL2B,UAAW,GACXvU,QAAS,eACTkI,SAAU,OACVrO,MAAO,SA+CI2a,GA3CM,WACnB,IAAMtT,EAAU7H,KAEhB,OACE,kBAAC,GAAD,CACEyH,UAAWI,EAAQuE,KACnB9E,MAAM,OAEN,kBAACqC,EAAA,EAAD,CACEhD,QAAQ,OACRiD,cAAc,SACdrJ,OAAO,OACP0G,eAAe,UAEf,kBAACkL,GAAA,EAAD,CAAWtD,SAAS,MAClB,kBAAC5E,EAAA,EAAD,CACEU,MAAM,SACN5D,MAAM,cACNoD,QAAQ,MAHV,qDAOA,kBAACF,EAAA,EAAD,CACEU,MAAM,SACN5D,MAAM,cACNoD,QAAQ,aAHV,4GAQA,kBAACR,EAAA,EAAD,CAAKyR,UAAU,UACb,yBACE1P,IAAI,oBACJjE,UAAWI,EAAQ0R,MACnBvP,IAAI,uDC3CZhK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,GACN2I,aAAc,CACZ3N,YAAatC,EAAMuC,QAAQ,IAE7B2N,aAAc,CACZ5N,YAAatC,EAAMuC,QAAQ,QA8DhB4N,GA1DC,SAAC,GAA4B,IAA1BxN,EAAyB,EAAzBA,UAAcG,EAAW,6BACpCC,EAAU7H,KAEhB,OACE,uCACEyH,UAAWM,YAAKF,EAAQuE,KAAM3E,IAC1BG,GAEJ,kBAAC+B,EAAA,EAAD,CACEhD,QAAQ,OACRM,eAAe,YAEf,kBAACgB,EAAA,EAAD,CAAQR,UAAWI,EAAQkN,cAA3B,UAGA,kBAAC9M,EAAA,EAAD,CAAQR,UAAWI,EAAQmN,cAA3B,UAGA,kBAAC/M,EAAA,EAAD,CACElB,MAAM,UACNoD,QAAQ,aAFV,gBAOF,kBAACR,EAAA,EAAD,CAAKkB,GAAI,GACP,kBAAC8E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACjG,EAAA,EAAD,CAAKkF,SAAU,KACb,kBAAC2C,GAAA,EAAD,CACEvB,WAAS,EACTiF,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACC,GAAA,EAAD,CACEpP,SAAS,QACTa,MAAM,UAEN,kBAAC,KAAD,SAKRwO,YAAY,iBACZpL,QAAQ,mBCrDlBnK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJzF,QAAS,OACTiD,cAAe,UAEjBqM,UAAW,CACTpM,WAAY,SACZlD,QAAS,QAEXuP,UAAW,CACT9O,YAAatC,EAAMuC,QAAQ,QA6FhBgL,GAzFC,SAAC,GAAoC,IAAlC5K,EAAiC,EAAjCA,UAAW4T,EAAsB,EAAtBA,OAAWzT,EAAW,sCAC5CC,EAAU7H,KAEhB,OACE,kBAAC2P,GAAA,EAAD,eACElI,UAAWM,YAAKF,EAAQuE,KAAM3E,IAC1BG,GAEJ,kBAACgI,GAAA,EAAD,KACE,kBAACjG,EAAA,EAAD,CACEhD,QAAQ,OACRM,eAAe,SACf0P,GAAI,GAEJ,kBAAC5M,EAAA,EAAD,CACE2B,IAAI,SACJ1B,IAAKqR,EAAOtE,MACZ5M,QAAQ,YAGZ,kBAACF,EAAA,EAAD,CACEU,MAAM,SACN5D,MAAM,cACN6D,cAAY,EACZT,QAAQ,MAEPkR,EAAO/T,OAEV,kBAAC2C,EAAA,EAAD,CACEU,MAAM,SACN5D,MAAM,cACNoD,QAAQ,SAEPkR,EAAOC,cAGZ,kBAAC3R,EAAA,EAAD,CAAKa,SAAU,IACf,kBAACJ,EAAA,EAAD,MACA,kBAACT,EAAA,EAAD,CAAKG,EAAG,GACN,kBAACsH,GAAA,EAAD,CACEC,WAAS,EACT4F,QAAQ,gBACR5P,QAAS,GAET,kBAAC+J,GAAA,EAAD,CACE3J,UAAWI,EAAQoO,UACnBvP,MAAI,GAEJ,kBAAC,KAAD,CACEe,UAAWI,EAAQqO,UACnBnP,MAAM,WAER,kBAACkD,EAAA,EAAD,CACElD,MAAM,gBACNJ,QAAQ,SACRwD,QAAQ,SAHV,oBAQF,kBAACiH,GAAA,EAAD,CACE3J,UAAWI,EAAQoO,UACnBvP,MAAI,GAEJ,kBAAC,KAAD,CACEe,UAAWI,EAAQqO,UACnBnP,MAAM,WAER,kBAACkD,EAAA,EAAD,CACElD,MAAM,gBACNJ,QAAQ,SACRwD,QAAQ,SAEPkR,EAAOE,eACP,IANH,kBChGG,IACb,CACEvO,GAAIwI,eACJjB,UAAW,aACX+G,YAAa,uGACbvE,MAAO,wCACPzP,MAAO,UACPiU,eAAgB,OAElB,CACEvO,GAAIwI,eACJjB,UAAW,aACX+G,YAAa,mGACbvE,MAAO,wCACPzP,MAAO,qBACPiU,eAAgB,OAElB,CACEvO,GAAIwI,eACJjB,UAAW,aACX+G,YAAa,uGACbvE,MAAO,wCACPzP,MAAO,QACPiU,eAAgB,OAElB,CACEvO,GAAIwI,eACJjB,UAAW,aACX+G,YAAa,kFACbvE,MAAO,wCACPzP,MAAO,OACPiU,eAAgB,OAElB,CACEvO,GAAIwI,eACJjB,UAAW,aACX+G,YAAa,+EACbvE,MAAO,wCACPzP,MAAO,SACPiU,eAAgB,OAElB,CACEvO,GAAIwI,eACJjB,UAAW,aACX+G,YAAa,qGACbvE,MAAO,wCACPzP,MAAO,cACPiU,eAAgB,QCpCdvb,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ1L,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C+M,UAAW,OACXpL,cAAe/B,EAAMuC,QAAQ,GAC7BT,WAAY9B,EAAMuC,QAAQ,IAE5B6Q,QAAS,CACP3X,OAAQ,YAoDGib,GAhDS,WACtB,IAAM3T,EAAU7H,KADY,EAEVyM,mBAASkJ,IAApBuC,EAFqB,oBAI5B,OACE,kBAAC,GAAD,CACEzQ,UAAWI,EAAQuE,KACnB9E,MAAM,eAEN,kBAAC6K,GAAA,EAAD,CAAWtD,UAAU,GACnB,kBAAC,GAAD,MACA,kBAAClF,EAAA,EAAD,CAAKkB,GAAI,GACP,kBAACuG,GAAA,EAAD,CACEC,WAAS,EACThK,QAAS,GAER6Q,EAAQ5N,KAAI,SAAC+Q,GAAD,OACX,kBAACjK,GAAA,EAAD,CACE1K,MAAI,EACJ6D,IAAK8Q,EAAOrO,GACZoF,GAAI,EACJd,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,CACE9J,UAAWI,EAAQqQ,QACnBmD,OAAQA,UAMlB,kBAAC1R,EAAA,EAAD,CACEkB,GAAI,EACJlE,QAAQ,OACRM,eAAe,UAEf,kBAACkR,GAAA,EAAD,CACEpR,MAAM,UACN0N,MAAO,EACPnM,KAAK,c,UChDXtI,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ1L,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C3E,OAAQ,OACRsG,cAAe/B,EAAMuC,QAAQ,GAC7BT,WAAY9B,EAAMuC,QAAQ,QAuLfoU,GAnLM,WACnB,IAAM5T,EAAU7H,KACVga,EAAWC,cAEjB,OACE,kBAAC,GAAD,CACExS,UAAWI,EAAQuE,KACnB9E,MAAM,YAEN,kBAACqC,EAAA,EAAD,CACEhD,QAAQ,OACRiD,cAAc,SACdrJ,OAAO,OACP0G,eAAe,UAEf,kBAACkL,GAAA,EAAD,CAAWtD,SAAS,MAClB,kBAAC,KAAD,CACEqL,cAAe,CACb1J,MAAO,GACPF,UAAW,GACXC,SAAU,GACV4J,SAAU,GACVuB,QAAQ,GAEVtB,iBACEC,OAAaC,MAAM,CACjB9J,MAAO6J,OAAa7J,MAAM,yBAAyB+J,IAAI,KAAK5I,SAAS,qBACrErB,UAAW+J,OAAaE,IAAI,KAAK5I,SAAS,0BAC1CpB,SAAU8J,OAAaE,IAAI,KAAK5I,SAAS,yBACzCwI,SAAUE,OAAaE,IAAI,KAAK5I,SAAS,wBACzC+J,OAAQrB,OAAcsB,MAAM,EAAC,GAAO,gCAGxCnB,SAAU,WACRR,EAAS,iBAAkB,CAAEjG,SAAS,OAGvC,gBACC0G,EADD,EACCA,OACAC,EAFD,EAECA,WACA5J,EAHD,EAGCA,aACA6J,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAjK,EAPD,EAOCA,OAPD,OASC,0BAAM4J,SAAUG,GACd,kBAAChR,EAAA,EAAD,CAAKgN,GAAI,GACP,kBAAC1M,EAAA,EAAD,CACElD,MAAM,cACNoD,QAAQ,MAFV,sBAMA,kBAACF,EAAA,EAAD,CACElD,MAAM,gBACN6D,cAAY,EACZT,QAAQ,SAHV,yCAQF,kBAACqH,GAAA,EAAD,CACEgG,MAAO7X,QAAQkb,EAAQvK,WAAamK,EAAOnK,WAC3CL,WAAS,EACTwB,WAAYoJ,EAAQvK,WAAamK,EAAOnK,UACxCF,MAAM,aACNhQ,OAAO,SACP8J,KAAK,YACL6Q,OAAQL,EACRhJ,SAAUZ,EACVX,MAAOS,EAAON,UACdnG,QAAQ,aAEV,kBAACqH,GAAA,EAAD,CACEgG,MAAO7X,QAAQkb,EAAQtK,UAAYkK,EAAOlK,UAC1CN,WAAS,EACTwB,WAAYoJ,EAAQtK,UAAYkK,EAAOlK,SACvCH,MAAM,YACNhQ,OAAO,SACP8J,KAAK,WACL6Q,OAAQL,EACRhJ,SAAUZ,EACVX,MAAOS,EAAOL,SACdpG,QAAQ,aAEV,kBAACqH,GAAA,EAAD,CACEgG,MAAO7X,QAAQkb,EAAQrK,OAASiK,EAAOjK,OACvCP,WAAS,EACTwB,WAAYoJ,EAAQrK,OAASiK,EAAOjK,MACpCJ,MAAM,gBACNhQ,OAAO,SACP8J,KAAK,QACL6Q,OAAQL,EACRhJ,SAAUZ,EACVc,KAAK,QACLzB,MAAOS,EAAOJ,MACdrG,QAAQ,aAEV,kBAACqH,GAAA,EAAD,CACEgG,MAAO7X,QAAQkb,EAAQV,UAAYM,EAAON,UAC1ClK,WAAS,EACTwB,WAAYoJ,EAAQV,UAAYM,EAAON,SACvC/J,MAAM,WACNhQ,OAAO,SACP8J,KAAK,WACL6Q,OAAQL,EACRhJ,SAAUZ,EACVc,KAAK,WACLzB,MAAOS,EAAOuJ,SACdhQ,QAAQ,aAEV,kBAACR,EAAA,EAAD,CACEE,WAAW,SACXlD,QAAQ,OACRiV,IAAK,GAEL,kBAAC1I,GAAA,EAAD,CACEC,QAASvC,EAAO8K,OAChBxR,KAAK,SACLwH,SAAUZ,IAEZ,kBAAC7G,EAAA,EAAD,CACElD,MAAM,gBACNoD,QAAQ,SAFV,kBAKG,IACD,kBAAC0M,GAAA,EAAD,CACE9P,MAAM,UACNoB,UAAWC,IACXC,GAAG,IACHwT,UAAU,SACV1R,QAAQ,MALV,0BAWHxK,QAAQkb,EAAQa,QAAUjB,EAAOiB,SAChC,kBAACI,GAAA,EAAD,CAAgBtE,OAAK,GAClBiD,EAAOiB,QAGZ,kBAAC/R,EAAA,EAAD,CAAKqR,GAAI,GACP,kBAAC/S,EAAA,EAAD,CACElB,MAAM,UACNkU,SAAUL,EACV3K,WAAS,EACT3H,KAAK,QACLsJ,KAAK,SACLzH,QAAQ,aANV,gBAWF,kBAACF,EAAA,EAAD,CACElD,MAAM,gBACNoD,QAAQ,SAFV,mBAKG,IACD,kBAAC0M,GAAA,EAAD,CACE1O,UAAWC,IACXC,GAAG,SACH8B,QAAQ,MAHV,oB,UC3KZnK,GAAYC,YAAY,CAC5BmM,KAAM,GACN1F,KAAM,CACJC,QAAS,OACTiD,cAAe,YAoHJmS,GAhHO,SAAC,GAA4B,IAA1BtU,EAAyB,EAAzBA,UAAcG,EAAW,6BAC1CC,EAAU7H,KAEhB,OACE,wCACEyH,UAAWM,YAAKF,EAAQuE,KAAM3E,IAC1BG,GAEJ,kBAAC+H,GAAA,EAAD,KACE,kBAACuB,GAAA,EAAD,CACEC,UAAU,2BACV7J,MAAM,kBAER,kBAAC8C,EAAA,EAAD,MACA,kBAACwF,GAAA,EAAD,KACE,kBAACwB,GAAA,EAAD,CACEC,WAAS,EACThK,QAAS,EACT2U,KAAK,QAEL,kBAAC5K,GAAA,EAAD,CACE3J,UAAWI,EAAQnB,KACnBA,MAAI,EACJ4K,GAAI,EACJ2K,GAAI,EACJ1K,GAAI,IAEJ,kBAACtH,EAAA,EAAD,CACElD,MAAM,cACN6D,cAAY,EACZT,QAAQ,MAHV,iBAOA,kBAAC+R,GAAA,EAAD,CACEC,QACE,kBAACjJ,GAAA,EAAD,CAAUkJ,gBAAc,IAE1BhM,MAAM,UAER,kBAAC8L,GAAA,EAAD,CACEC,QACE,kBAACjJ,GAAA,EAAD,CAAUkJ,gBAAc,IAE1BhM,MAAM,uBAER,kBAAC8L,GAAA,EAAD,CACEC,QAAS,kBAACjJ,GAAA,EAAD,MACT9C,MAAM,kBAER,kBAAC8L,GAAA,EAAD,CACEC,QACE,kBAACjJ,GAAA,EAAD,CAAUkJ,gBAAc,IAE1BhM,MAAM,iBAGV,kBAACgB,GAAA,EAAD,CACE3J,UAAWI,EAAQnB,KACnBA,MAAI,EACJ4K,GAAI,EACJ2K,GAAI,EACJ1K,GAAI,IAEJ,kBAACtH,EAAA,EAAD,CACElD,MAAM,cACN6D,cAAY,EACZT,QAAQ,MAHV,YAOA,kBAAC+R,GAAA,EAAD,CACEC,QACE,kBAACjJ,GAAA,EAAD,CAAUkJ,gBAAc,IAE1BhM,MAAM,UAER,kBAAC8L,GAAA,EAAD,CACEC,QAAS,kBAACjJ,GAAA,EAAD,MACT9C,MAAM,uBAER,kBAAC8L,GAAA,EAAD,CACEC,QACE,kBAACjJ,GAAA,EAAD,CAAUkJ,gBAAc,IAE1BhM,MAAM,mBAKd,kBAAChG,EAAA,EAAD,MACA,kBAACT,EAAA,EAAD,CACEhD,QAAQ,OACRM,eAAe,WACf6C,EAAG,GAEH,kBAAC7B,EAAA,EAAD,CACElB,MAAM,UACNoD,QAAQ,aAFV,YC3GJnK,GAAYC,YAAY,CAC5BmM,KAAM,KAwEOiQ,GArEE,SAAC,GAA4B,IAA1B5U,EAAyB,EAAzBA,UAAcG,EAAW,6BACrCC,EAAU7H,KAD2B,EAEfyM,mBAAS,CACnC0N,SAAU,GACVmC,QAAS,KAJgC,mBAEpC1L,EAFoC,KAE5BC,EAF4B,KAOrCC,EAAe,SAAChE,GACpB+D,EAAU,6BACLD,GADI,kBAEN9D,EAAMiE,OAAO7G,KAAO4C,EAAMiE,OAAOZ,UAItC,OACE,wCACE1I,UAAWM,YAAKF,EAAQuE,KAAM3E,IAC1BG,GAEJ,kBAAC+H,GAAA,EAAD,KACE,kBAACuB,GAAA,EAAD,CACEC,UAAU,kBACV7J,MAAM,aAER,kBAAC8C,EAAA,EAAD,MACA,kBAACwF,GAAA,EAAD,KACE,kBAAC4B,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,WACNhQ,OAAO,SACP8J,KAAK,WACLwH,SAAUZ,EACVc,KAAK,WACLzB,MAAOS,EAAOuJ,SACdhQ,QAAQ,aAEV,kBAACqH,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,mBACNhQ,OAAO,SACP8J,KAAK,UACLwH,SAAUZ,EACVc,KAAK,WACLzB,MAAOS,EAAO0L,QACdnS,QAAQ,cAGZ,kBAACC,EAAA,EAAD,MACA,kBAACT,EAAA,EAAD,CACEhD,QAAQ,OACRM,eAAe,WACf6C,EAAG,GAEH,kBAAC7B,EAAA,EAAD,CACElB,MAAM,UACNoD,QAAQ,aAFV,cC7DJnK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ1L,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C+M,UAAW,OACXpL,cAAe/B,EAAMuC,QAAQ,GAC7BT,WAAY9B,EAAMuC,QAAQ,QAsBfkV,GAlBM,WACnB,IAAM1U,EAAU7H,KAEhB,OACE,kBAAC,GAAD,CACEyH,UAAWI,EAAQuE,KACnB9E,MAAM,YAEN,kBAAC6K,GAAA,EAAD,CAAWtD,SAAS,MAClB,kBAAC,GAAD,MACA,kBAAClF,EAAA,EAAD,CAAKkB,GAAI,GACP,kBAAC,GAAD,UCfJ7K,ICEYC,YAAY,CAC5BmM,KAAM,GACN1F,KAAM,CACJC,QAAS,OACTiD,cAAe,YCPD3J,YAAY,CAC5BmM,KAAM,KFAUnM,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,GACN2I,aAAc,CACZ3N,YAAatC,EAAMuC,QAAQ,IAE7B2N,aAAc,CACZ5N,YAAatC,EAAMuC,QAAQ,SA6ChB4N,GAzCC,SAAC,GAA2B,EAAzBxN,UAAyB,6BAC1BzH,KAEhB,OAEI,kBAAC2J,EAAA,EAAD,CACIuE,MAAO,CAAC1N,MAAM,SAEZ,kBAACmJ,EAAA,EAAD,KACE,kBAAC6H,GAAA,EAAD,CACElJ,KAAK,QACL2H,WAAS,EACTuM,WAAW,EACXtH,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACC,GAAA,EAAD,CACEpP,SAAS,QACTa,MAAM,UAEN,kBAAC,KAAD,SAKRwO,YAAY,2BACZpL,QAAQ,gBGpClBnK,GAAYC,YAAY,CAC5BmM,KAAM,KAWR,IAAMqQ,GAPN,WACE,IAAIC,EAAQ,IAAIC,KAGhB,OAFWD,EAAME,cAAc,KAAK,KAAOF,EAAMG,WAAa,IAAIrJ,OAAO,GAAG,KAAK,IAAMkJ,EAAMI,WAAWtJ,OAAO,GAKnGuJ,GAkFCC,GAhFE,SAAC,GAA2B,EAAzBvV,UAAyB,6BAC3BzH,KAD4B,IAAD,EAEfyM,mBAAS,CACnC0N,SAAU,GACVmC,QAAS,KAJgC,6BAQ3C,OAEI,kBAAC3M,GAAA,EAAD,KACE,kBAACuB,GAAA,EAAD,CACEC,UAAU,6CACV7J,MAAM,gBAER,kBAAC8C,EAAA,EAAD,MACA,kBAACwF,GAAA,EAAD,KAEA,kBAAC4B,GAAA,EAAD,CACExE,GAAG,4BACHoD,MAAM,0BACN6M,WAAS,EACTC,KAAM,EACNC,QAAS,GACThT,QAAQ,SACR8F,WAAW,IAGb,kBAACmB,GAAA,EAAD,CAAMlD,MAAO,CAACgN,UAAW,OACvB5C,UAAU,MACVrB,QAAQ,SACRpN,WAAW,SACXxC,QAAS,EACTgK,WAAS,GAET,kBAACD,GAAA,EAAD,CAAM1K,MAAI,EAAC6K,GAAI,GACb,kBAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,QACNwB,KAAK,OACLwL,aAAcX,GACdY,gBAAiB,CACfC,QAAQ,GAEVld,OAAO,SACP8J,KAAK,OACLC,QAAQ,cAGZ,kBAACiH,GAAA,EAAD,CAAM1K,MAAI,EAAC6K,GAAI,GACb,kBAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,SACNhQ,OAAO,SACP8J,KAAK,QACLC,QAAQ,cAGZ,kBAACiH,GAAA,EAAD,CAAM1K,MAAI,EAAC6K,GAAI,GACb,kBAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,OACNhQ,OAAO,SACP8J,KAAK,MACLC,QAAQ,kB,UC3EhBnK,GAAYC,aAAW,SAAC6E,GAAD,YAAY,CACvCsH,KAAM,GACNmN,OAAK,GACHlE,SAAU,WACV9U,OAAQ,KAFL,cAGFuE,EAAM0J,YAAY+O,KAAK,MAAQ,CAC9B/c,MAAO,kBACPD,OAAQ,MALP,cAOH,0BAA2B,CACzBid,OAAQ,EACR,mBAAoB,CAClBC,QAAS,KAEX,iBAAkB,CAChBA,QAAS,GAEX,gBAAiB,CACf5R,OAAQ,4BAhBT,GAoBL6R,aAAc,GACdC,YAAa,CACXtI,SAAU,WACVhU,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRmF,QAAS,OACTkD,WAAY,SACZ5C,eAAgB,SAChBF,MAAOjC,EAAME,QAAQK,OAAOC,OAE9BsY,SAAU,CACRvI,SAAU,WACVhU,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRqc,eAAgB,QAChBC,mBAAoB,cAEtBC,cAAe,CACb1I,SAAU,WACVhU,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRd,gBAAiBoE,EAAME,QAAQK,OAAO2Y,MACtCP,QAAS,GACTQ,WAAYnZ,EAAMoZ,YAAYC,OAAO,YAEvCC,WAAY,CACV/I,SAAU,WACVhV,QAAQ,GAAD,OAAKyE,EAAMuC,QAAQ,GAAnB,cAA2BvC,EAAMuC,QAAQ,GAAzC,cAAiDvC,EAAMuC,QAAQ,GAAK,EAApE,OAETgX,YAAa,CACX9d,OAAQ,EACRC,MAAO,GACPE,gBAAiBoE,EAAME,QAAQK,OAAOC,MACtC+P,SAAU,WACV7T,QAAS,EACTH,KAAM,kBACN4c,WAAYnZ,EAAMoZ,YAAYC,OAAO,gBAgG1BG,GA5FI,SAAC,GAA2B,EAAzB7W,UAAyB,6BAAC,IACxCI,EAAU7H,KAEhB,OACI,kBAAC2P,GAAA,EAAD,KACE,kBAACuB,GAAA,EAAD,CACEC,UAAU,wBACV7J,MAAM,WAER,kBAAC8C,EAAA,EAAD,MACA,kBAACwF,GAAA,EAAD,KAEA,kBAACwB,GAAA,EAAD,CAAMlD,MAAO,CAACgN,UAAW,OACvB5C,UAAU,MACVrB,QAAQ,SACRpN,WAAW,SACXxC,QAAS,EACTgK,WAAS,GAET,kBAACD,GAAA,EAAD,CAAM1K,MAAI,EAAC6K,GAAI,GACb,kBAACgN,GAAA,EAAD,CACEC,aAAW,EACXjU,IAAI,gBACJ9C,UAAWI,EAAQ0R,MACnBkF,sBAAuB5W,EAAQ6V,aAC/BxP,MAAO,CACL1N,MAAO,SAGT,0BACEiH,UAAWI,EAAQ+V,SACnB1P,MAAO,CACLwQ,gBAAgB,oCAGpB,0BAAMjX,UAAWI,EAAQkW,gBACzB,0BAAMtW,UAAWI,EAAQ8V,aACvB,kBAAC1T,EAAA,EAAD,CACE9B,UAAU,OACVgC,QAAQ,YACRpD,MAAM,UACNU,UAAWI,EAAQuW,YAJrB,aAOE,0BAAM3W,UAAWI,EAAQwW,kBAKjC,kBAACjN,GAAA,EAAD,CAAM1K,MAAI,EAAC6K,GAAI,GACb,kBAACgN,GAAA,EAAD,CACEC,aAAW,EACXjU,IAAI,gBACJ9C,UAAWI,EAAQ0R,MACnBkF,sBAAuB5W,EAAQ6V,aAC/BxP,MAAO,CACL1N,MAAO,SAGT,0BACEiH,UAAWI,EAAQ+V,SACnB1P,MAAO,CACLwQ,gBAAgB,0CAGpB,0BAAMjX,UAAWI,EAAQkW,gBACzB,0BAAMtW,UAAWI,EAAQ8V,aACvB,kBAAC1T,EAAA,EAAD,CACE9B,UAAU,OACVgC,QAAQ,YACRpD,MAAM,UACNU,UAAWI,EAAQuW,YAJrB,mBAOE,0BAAM3W,UAAWI,EAAQwW,sB,2FCvI3C,IAkGeM,GAlGF,SAAC,GAA2B,EAAzBlX,UAAyB,6BAAC,IAAD,EAEfmX,IAAMnS,UAAS,GAFA,mBAEhCtB,EAFgC,KAE1B0T,EAF0B,OAGTD,IAAMnS,SAAS,IAHN,mBAGhCpK,EAHgC,KAGvByc,EAHuB,KAIjCC,EAAU5T,GAA2B,IAAnB9I,EAAQ4L,OAJO,EAKL2Q,IAAMnS,SAAS,IALV,mBAKrBuS,GALqB,WAazC,SAASC,EAAwBC,GAQ3B,IAAIC,EApCV,SAAyBC,GACvB,IAAIC,EAAOD,EAAUE,cAWrB,MAVK,wQAKyCD,EALzC,0BAkCWE,CAAgBL,GAC5BxH,KAAM8H,0CAAiBC,mBAAmBN,GAAQ,CAC9CxH,OAAQ,MAERC,QAAS,CACP,cAAiB,SAAS8H,KAAK,eAK/B,eAAgB,oCAChB,OAAU,qCASf7H,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAlC,GAAI,OAnChB,SAAsBkE,GACpB,IAAIlE,EAAOkE,EAAE3B,QAAQyH,SACrBb,EAAYc,OAAOC,KAAKlK,GAAMrL,KAAI,SAACC,GAAD,OAASoL,EAAKpL,OAiC9BuV,CAAanK,MAM/B,OACE,kBAACoK,GAAA,EAAD,CACE/S,GAAG,eACHkB,MAAO,CAAE1N,MAAM,QACf2K,KAAMA,EACN6U,OAAQ,WACNnB,GAAQ,IAEV3T,QAAS,WACP2T,GAAQ,GACRC,EAAW,KAEbmB,kBAAmB,SAACjO,EAAQ7B,GAAT,OAAmB6B,EAAOkO,WAAW/P,QAAUA,EAAM+P,WAAW/P,OACnFgQ,eAAgB,SAACnO,GAAD,OAAYA,EAAOkO,WAAW/P,MAAMiQ,YACpD/d,QAASA,EACT0c,QAASA,EAETsB,cAAe,SAACvT,EAAeqD,EAAemQ,GAC7B,UAAXA,IACFtB,EAAa7O,GACb8O,EAAwB9O,KAK5BoQ,YAAa,SAACC,GAAD,OACX,kBAAChP,GAAA,EAAD,iBACMgP,EADN,CAEEpQ,MAAM,oBACNjG,QAAQ,WACRqS,WAAW,EACXtH,WAAU,6BACLsL,EAAOtL,YADF,IAERuL,aACE,kBAAC,IAAMzK,SAAP,KACG+I,EAAU,kBAAC2B,GAAA,EAAD,CAAkB3Z,MAAM,UAAUuB,KAAM,KAAS,KAC3DkY,EAAOtL,WAAWuL,uBCpFnC,IA8EeE,GA9EA,SAAC,GAA2B,EAAzBlZ,UAAyB,6BAAC,IAAD,EAEjBmX,IAAMnS,UAAS,GAFE,mBAElCtB,EAFkC,KAE5B0T,EAF4B,OAGXD,IAAMnS,SAAS,IAHJ,mBAGlCpK,EAHkC,KAGzByc,EAHyB,KAInCC,EAAU5T,GAA2B,IAAnB9I,EAAQ4L,OAJS,EAKP2Q,IAAMnS,SAAS,IALR,mBAKvBuS,GALuB,WAa3C,SAASC,EAAwBC,GAC3B,IAAIC,EA7BV,SAAoBC,GAClB,IAAIC,EAAOD,EAAUE,cAWrB,MAVK,+OAKoCD,EALpC,0BA2BWuB,CAAW1B,GACvBxH,KAAM8H,0CAAiBC,mBAAmBN,GAAQ,CAC9CxH,OAAQ,MACRC,QAAS,CACP,cAAiB,SAAS8H,KAAK,eAC/B,eAAgB,oCAChB,OAAU,qCAGf7H,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAlC,GAAI,OAjBhB,SAAsBkE,GACpB,IAAIlE,EAAOkE,EAAE3B,QAAQyH,SACrBb,EAAYc,OAAOC,KAAKlK,GAAMrL,KAAI,SAACC,GAAD,OAASoL,EAAKpL,OAe9BuV,CAAanK,MAI/B,OACE,kBAACoK,GAAA,EAAD,CACE/S,GAAG,eACHkB,MAAO,CAAE1N,MAAM,QACf2K,KAAMA,EACN6U,OAAQ,WACNnB,GAAQ,IAEV3T,QAAS,WACP2T,GAAQ,GACRC,EAAW,KAEbmB,kBAAmB,SAACjO,EAAQ7B,GAAT,OAAmB6B,EAAO6O,MAAM1Q,QAAUA,EAAM0Q,MAAM1Q,OACzEgQ,eAAgB,SAACnO,GAAD,OAAYA,EAAO6O,MAAM1Q,MAAMiQ,YAC/C/d,QAASA,EACT0c,QAASA,EAETsB,cAAe,SAACvT,EAAeqD,EAAemQ,GAC7B,UAAXA,IACFtB,EAAa7O,GACb8O,EAAwB9O,KAK5BoQ,YAAa,SAACC,GAAD,OACX,kBAAChP,GAAA,EAAD,iBACMgP,EADN,CAEEpQ,MAAM,oBACNjG,QAAQ,WACRqS,WAAW,EACXtH,WAAU,6BACLsL,EAAOtL,YADF,IAERuL,aACE,kBAAC,IAAMzK,SAAP,KACG+I,EAAU,kBAAC2B,GAAA,EAAD,CAAkB3Z,MAAM,UAAUuB,KAAM,KAAS,KAC3DkY,EAAOtL,WAAWuL,uBChEnC,IA8EeE,GA9EA,SAAC,GAA2B,EAAzBlZ,UAAyB,6BAAC,IAAD,EAEjBmX,IAAMnS,UAAS,GAFE,mBAElCtB,EAFkC,KAE5B0T,EAF4B,OAGXD,IAAMnS,SAAS,IAHJ,mBAGlCpK,EAHkC,KAGzByc,EAHyB,KAInCC,EAAU5T,GAA2B,IAAnB9I,EAAQ4L,OAJS,EAKP2Q,IAAMnS,SAAS,IALR,mBAKvBuS,GALuB,WAa3C,SAASC,EAAwBC,GAC3B,IAAIC,EA7BV,SAAoBC,GAClB,IAAIC,EAAOD,EAAUE,cAWrB,MAVK,+OAKoCD,EALpC,0BA2BWuB,CAAW1B,GACvBxH,KAAM8H,0CAAiBC,mBAAmBN,GAAQ,CAC9CxH,OAAQ,MACRC,QAAS,CACP,cAAiB,SAAS8H,KAAK,eAC/B,eAAgB,oCAChB,OAAU,qCAGf7H,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAlC,GAAI,OAjBhB,SAAsBkE,GACpB,IAAIlE,EAAOkE,EAAE3B,QAAQyH,SACrBb,EAAYc,OAAOC,KAAKlK,GAAMrL,KAAI,SAACC,GAAD,OAASoL,EAAKpL,OAe9BuV,CAAanK,MAI/B,OACE,kBAACoK,GAAA,EAAD,CACE/S,GAAG,eACHkB,MAAO,CAAE1N,MAAM,QACf2K,KAAMA,EACN6U,OAAQ,WACNnB,GAAQ,IAEV3T,QAAS,WACP2T,GAAQ,GACRC,EAAW,KAEbmB,kBAAmB,SAACjO,EAAQ7B,GAAT,OAAmB6B,EAAO6O,MAAM1Q,QAAUA,EAAM0Q,MAAM1Q,OACzEgQ,eAAgB,SAACnO,GAAD,OAAYA,EAAO6O,MAAM1Q,MAAMiQ,YAC/C/d,QAASA,EACT0c,QAASA,EAETsB,cAAe,SAACvT,EAAeqD,EAAemQ,GAC7B,UAAXA,IACFtB,EAAa7O,GACb8O,EAAwB9O,KAK5BoQ,YAAa,SAACC,GAAD,OACX,kBAAChP,GAAA,EAAD,iBACMgP,EADN,CAEEpQ,MAAM,oBACNjG,QAAQ,WACRqS,WAAW,EACXtH,WAAU,6BACLsL,EAAOtL,YADF,IAERuL,aACE,kBAAC,IAAMzK,SAAP,KACG+I,EAAU,kBAAC2B,GAAA,EAAD,CAAkB3Z,MAAM,UAAUuB,KAAM,KAAS,KAC3DkY,EAAOtL,WAAWuL,uBChE7BzgB,GAAYC,YAAY,CAC5BmM,KAAM,KAuMO4Q,GAnME,SAAC,GAA2B,EAAzBvV,UAAyB,6BAAC,IACtCI,EAAU7H,KAD2B,EAEfyM,mBAAS,CACnC0N,SAAU,GACVmC,QAAS,KAJgC,gCAQjBsC,IAAMnS,UAAS,IARE,mBAQpCqU,EARoC,KAQ7BC,EAR6B,OASjBnC,IAAMnS,UAAS,GATE,mBASpCuU,EAToC,KAS7BC,EAT6B,OAUjBrC,IAAMnS,UAAS,GAVE,mBAUpCyU,EAVoC,KAU7BC,EAV6B,OAWjBvC,IAAMnS,UAAS,GAXE,mBAWpC2U,EAXoC,KAW7BC,EAX6B,KA6BrCzU,EAAc,SAAC0U,GACnBP,GAAS,GACTE,GAAS,GACTE,GAAS,GACTE,GAAS,IAaX,OAEI,kBAAC1R,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,KAEA,kBAACwB,GAAA,EAAD,CAAMlD,MAAO,CAACgN,UAAW,OACvB5C,UAAU,MACVrB,QAAQ,SACRpN,WAAW,SACXxC,QAAS,EACTgK,WAAS,GAET,kBAACD,GAAA,EAAD,CAAM1K,MAAI,EAAC6K,GAAI,EAAG5G,MAAM,UACtB,kBAAC1C,EAAA,EAAD,CAAQR,UAAWI,EAAQkN,aACzBhO,MAAM,UACNoD,QAAQ,YACR0C,QAlDa,SAACyU,GACxBP,GAAS,KA8CD,aAQF,kBAAC3P,GAAA,EAAD,CAAM1K,MAAI,EAAC6K,GAAI,EAAG5G,MAAM,UACtB,kBAAC1C,EAAA,EAAD,CAAQR,UAAWI,EAAQkN,aACzBhO,MAAM,UACNoD,QAAQ,YACR0C,QAvDa,SAACyU,GACxBL,GAAS,KAmDD,eAQF,kBAAC7P,GAAA,EAAD,CAAM1K,MAAI,EAAC6K,GAAI,EAAG5G,MAAM,UACtB,kBAAC1C,EAAA,EAAD,CAAQR,UAAWI,EAAQkN,aACzBhO,MAAM,UACNoD,QAAQ,YACR0C,QA5Da,SAACyU,GACxBH,GAAS,KAwDD,aAQF,kBAAC/P,GAAA,EAAD,CAAM1K,MAAI,EAAC6K,GAAI,EAAG5G,MAAM,UACtB,kBAAC1C,EAAA,EAAD,CAAQR,UAAWI,EAAQkN,aACzBhO,MAAM,UACNoD,QAAQ,YACR0C,QAjEa,SAACyU,GACxBD,GAAS,KA6DD,iBAYN,kBAACE,GAAA,EAAD,CACMpW,KAAM2V,EACN7Q,WAAW,EACXpB,SAAS,KACT3D,QAAS0B,EACT4U,kBAAgB,qBAEpB,kBAACC,GAAA,EAAD,CAAazU,GAAG,qBAAhB,QACA,kBAAC0U,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,0HAGA,kBAACC,GAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAAC5Z,EAAA,EAAD,CAAQ4E,QAASD,EAAa7F,MAAM,WAApC,UAMJ,kBAACwa,GAAA,EAAD,CACMpW,KAAM6V,EACN/Q,WAAW,EACXpB,SAAS,KACT3D,QAAS0B,EACT4U,kBAAgB,qBAEpB,kBAACC,GAAA,EAAD,CAAazU,GAAG,qBAAhB,UACA,kBAAC0U,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,4HAGA,kBAACG,GAAD,OAEF,kBAACD,GAAA,EAAD,KACE,kBAAC5Z,EAAA,EAAD,CAAQ4E,QAASD,EAAa7F,MAAM,WAApC,UAOJ,kBAACwa,GAAA,EAAD,CACMpW,KAAM+V,EACNjR,WAAW,EACXpB,SAAS,KACT3D,QAAS0B,EACT4U,kBAAgB,qBAEpB,kBAACC,GAAA,EAAD,CAAazU,GAAG,qBAAhB,QACA,kBAAC0U,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,8DAGA,kBAACC,GAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAAC5Z,EAAA,EAAD,CAAQ4E,QAASD,EAAa7F,MAAM,WAApC,UAOJ,kBAACwa,GAAA,EAAD,CACMpW,KAAMiW,EACNnR,WAAW,EACXpB,SAAS,KACT3D,QAAS0B,EACT4U,kBAAgB,qBAEpB,kBAACC,GAAA,EAAD,CAAazU,GAAG,qBAAhB,WACA,kBAAC0U,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,oEAGA,kBAACI,GAAD,OAEF,kBAACF,GAAA,EAAD,KACE,kBAAC5Z,EAAA,EAAD,CAAQ4E,QAASD,EAAa7F,MAAM,WAApC,a,UC7KJ/G,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJzF,QAAS,OACTiD,cAAe,UAEjBqM,UAAW,CACTpM,WAAY,SACZlD,QAAS,QAEXuP,UAAW,CACT9O,YAAatC,EAAMuC,QAAQ,IAE7B8O,SAAU,CACRlQ,WAAY,OACZc,MAAM,WAERqP,UAAW,CACTC,aAAa,MACbjP,YAAY,YA8BV4a,IAhB0BvC,mBARrB,qNAyBI,CAAC,uBAAc,wBAAe,yBAAgB,sBAAa,qBAAY,qBAAY,wBAAe,wBAD3GuC,GAEW,CAAC,yBAAgB,mBAAU,2BAAkB,wBAAe,yBAAgB,uBAAc,qBAAY,wBAFjHA,GAGU,CAAC,uBAAc,uBAAc,0BAAiB,yBAAgB,uBAAc,wBAAe,wBAAe,uBAmN3G3J,GAhNF,SAAC,GAA4B,IAA1B5Q,EAAyB,EAAzBA,UAAcG,EAAW,6BACjCC,EAAU7H,KADuB,EAIZyM,mBAAS,OAJG,mBAIhCwV,EAJgC,KAIvBC,EAJuB,OAKLzV,mBAAS,GALJ,mBAKhC0V,EALgC,KAKrBC,EALqB,OAMC3V,mBAASuV,IANV,mBAMhCK,EANgC,KAMlBC,EANkB,OAUb7V,mBAAS,GAVI,mBAajC8V,GAbiC,UAatB,SAACC,GACdN,EAAQM,GACRJ,EAAa,GAEXE,EADS,SAAPE,EACcR,GAEF,QAAPQ,EACSR,GAGAA,MAgCtB,OApBF,SAAqBS,EAAUC,GAC7B,IAAMC,EAAa/D,IAAMgE,OAAO,MAC1BC,EAAgBjE,IAAMgE,OAAOH,GACnC7D,IAAMpV,WAAU,WACdqZ,EAAcC,QAAUL,KAE1B7D,IAAMpV,WAAU,WAEd,GAAqB,kBAAVkZ,EAET,OADAC,EAAWG,QAAUljB,OAAOmjB,aAFjB,kBAAMF,EAAcC,YAEeJ,GACvC,kBAAM9iB,OAAOojB,cAAcL,EAAWG,YAE9C,CAACJ,IACGC,EAAWG,QAGpBG,EAAY,WAtBNb,EArCkB,IAoChBD,EACW,EAEAA,EAAY,KAxCZ,KAiEf,kBAAChQ,GAAA,EAAD,CAAWtD,UAAU,GACrB,wCACEpH,UAAWM,YAAKF,EAAQuE,KAAM3E,IAC1BG,GAEN,kBAAC+H,GAAA,EAAD,eACElI,UAAWM,YAAKF,EAAQuE,KAAM3E,IAC1BG,GAEJ,kBAACgI,GAAA,EAAD,KACE,kBAACjG,EAAA,EAAD,CACEhD,QAAQ,OACRM,eAAe,OACf4C,WAAW,SACX8M,GAAI,EACJzI,MAAO,CAACmH,SAAU,aAElB,kBAACtL,EAAA,EAAD,CACEtC,UAAWI,EAAQuO,UACnB1K,IAAI,aACJ1B,IAAI,GACJG,QAAQ,WAGR,kBAAC,GAAD,OAIZ,kBAACC,EAAA,EAAD,MAEQ,kBAACgH,GAAA,EAAD,CAAMlD,MAAO,CAACtH,WAAY,QACxB0R,UAAU,MACVrB,QAAQ,SACRpN,WAAW,SACXxC,QAAS,EACTgK,WAAS,GAGT,kBAACD,GAAA,EAAD,CAAM1K,MAAI,EAACwH,MAAO,CAACrH,cAAe,SAClC,kBAACqc,GAAA,EAAD,CACE/Y,QAAQ,WACR7B,KAAK,QACL4O,aAAW,MACXnQ,MAAgB,OAATkb,EAAiB,UAAU,UAClC/T,MAAO,CAACQ,YAAY,OAAOC,aAAa,QACxC9B,QAAS,kBAAM0V,EAAS,SAN1B,gBASiB,kBAACjN,GAAA,EAAD,CACXpP,SAAS,SAGT,kBAAC,KAAD,SAKN,kBAACkL,GAAA,EAAD,CAAM1K,MAAI,EAACwH,MAAO,CAACrH,cAAe,SAClC,kBAACqc,GAAA,EAAD,CACE/Y,QAAQ,WACR7B,KAAK,QACLvB,MAAgB,SAATkb,EAAmB,UAAU,UACpC/K,aAAW,MACXhJ,MAAO,CAACQ,YAAY,OAAOC,aAAa,QACxC9B,QAAS,kBAAM0V,EAAS,WAN1B,kBAQmB,kBAACjN,GAAA,EAAD,CACbpP,SAAS,SAGT,kBAAC,KAAD,SAKN,kBAACkL,GAAA,EAAD,CAAM1K,MAAI,EAACwH,MAAO,CAACrH,cAAe,SAClC,kBAACqc,GAAA,EAAD,CACE/Y,QAAQ,WACR7B,KAAK,QACLvB,MAAgB,QAATkb,EAAkB,UAAU,UACnC/K,aAAW,MACXhJ,MAAO,CAACQ,YAAY,OAAOC,aAAa,QACxC9B,QAAS,kBAAM0V,EAAS,UAN1B,iBAQkB,kBAACjN,GAAA,EAAD,CACZpP,SAAS,SAGT,kBAAC,KAAD,WAQV,kBAACkL,GAAA,EAAD,CAAMlD,MAAO,CAACgN,UAAW,OAAQjW,WAAW,WAC1CqT,UAAU,MACVrB,QAAQ,SACRpN,WAAW,SACXxC,QAAS,EACTgK,WAAS,GAET,kBAACD,GAAA,EAAD,CAAM1K,MAAI,EAAC6K,GAAI,GACX,kBAACtH,EAAA,EAAD,CAAYE,QAAQ,WAAWhC,UAAU,IAAIwC,MAAM,SAAnD,iBACgB,gCAASsX,GADzB,MAIJ,kBAAC7Q,GAAA,EAAD,CAAM1K,MAAI,EAAC6K,GAAI,GACf,kBAACtH,EAAA,EAAD,CAAYE,QAAQ,WAAWhC,UAAU,IAAIwC,MAAM,QACnD,gCAAS0X,EAAaF,IADtB,YAMF,kBAAC,GAAD,MAEA,kBAACgB,GAAD,MAEA,kBAAC,GAAD,MAEA,kBAAC/Y,EAAA,EAAD,MACA,kBAACT,EAAA,EAAD,CACEhD,QAAQ,OACRM,eAAe,WACf6C,EAAG,GAEH,kBAAC7B,EAAA,EAAD,CACElB,MAAM,UACNoD,QAAQ,YACR+D,MAAO,CAAC9G,YAAY,SAHtB,SAOA,kBAACa,EAAA,EAAD,CACElB,MAAM,UACNoD,QAAQ,aAFV,gBC5QFnK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCsH,KAAM,CACJ1L,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C+M,UAAW,OACXpL,cAAe/B,EAAMuC,QAAQ,GAC7BT,WAAY9B,EAAMuC,QAAQ,QAmBfkV,GAfM,WACnB,IAAM1U,EAAU7H,KAEhB,OACE,kBAAC,GAAD,CACEyH,UAAWI,EAAQuE,KACnB9E,MAAM,QAEN,kBAAC6K,GAAA,EAAD,CAAWtD,SAAS,MAClB,kBAAC,GAAD,SCYOuU,GA5BA,CACb,CACEC,KAAM,IACNC,QAAS,kBAAC,GAAD,MACT9T,SAAU,CACR,CAAE6T,KAAM,OAAQC,QAAS,kBAACC,GAAD,OACzB,CAAEF,KAAM,UAAWC,QAAS,kBAACE,GAAD,OAC5B,CAAEH,KAAM,QAASC,QAAS,kBAAC,GAAD,OAC1B,CAAED,KAAM,cAAeC,QAAS,kBAAC,GAAD,OAChC,CAAED,KAAM,WAAYC,QAAS,kBAAC,GAAD,OAC7B,CAAED,KAAM,OAAQC,QAAS,kBAACG,GAAD,OACzB,CAAEJ,KAAM,IAAKC,QAAS,kBAAC,IAAD,CAAUjb,GAAG,YAGvC,CACEgb,KAAM,IACNC,QAAS,kBAAC,GAAD,MACT9T,SAAU,CACR,CAAE6T,KAAM,QAASC,QAAS,kBAAC,GAAD,OAC1B,CAAED,KAAM,WAAYC,QAAS,kBAAC,GAAD,OAC7B,CAAED,KAAM,MAAOC,QAAS,kBAAC,GAAD,OACxB,CAAED,KAAM,IAAKC,QAAS,kBAAC,IAAD,CAAUjb,GAAG,oBAEnC,CAAEgb,KAAM,IAAKC,QAAS,kBAAC,IAAD,CAAUjb,GAAG,aCjB1BgP,GAXH,WACV,IAAMqM,EAAUC,YAAUP,IAE1B,OACE,kBAACQ,EAAA,EAAD,CAAe9e,MAAOA,GACpB,kBAAC,EAAD,MACC4e,ICRPG,IAASC,OAQP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEDC,SAASC,eAAe,ShEgHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtM,MAAK,SAAAuM,GACjCA,EAAaC,kB","file":"static/js/main.acbe9bc0.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.indigo[500]\n    },\n    secondary: {\n      main: colors.indigo[500]\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.blueGrey[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nimport {\n  Home as Home,\n  BookOpen as BookOpen,\n  Bell as Bell,\n  Users as UsersIcon,\n  Settings as SettingsIcon,\n  User as UserIcon,\n\n  /*Lock as LockIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  UserPlus as UserPlusIcon*/\n} from 'react-feather';\n\nimport {\nPostAdd\n} from '@material-ui/icons';\n\nimport NavItem from './NavItem';\n\nconst website = {\n  logo: './static/images/logo/baton.png',\n  title: 'Hiperfolio',\n  description: 'Portfolios Social Network'\n};\n\nconst items = [\n  {\n    href: 'wall',\n    icon: Home,\n    title: 'Wall'\n  },\n  {\n    href: 'post',\n    icon: PostAdd,\n    title: 'Create'\n  },\n  {\n    href: 'cv',\n    icon: BookOpen,\n    title: 'Curriculum'\n  },\n  {\n    href: 'users',\n    icon: UserIcon,\n    title: 'Users & Companies'\n  },\n  {\n    href: 'jobs',\n    icon: UsersIcon,\n    title: 'Find Jobs'\n  },\n  {\n    href: 'communities',\n    icon: UsersIcon,\n    title: 'Communities'\n  },\n  {\n    href: 'notifications',\n    icon: Bell,\n    title: 'Notifications'\n  },\n  {\n    href: 'settings',\n    icon: SettingsIcon,\n    title: 'Settings'\n  },\n  /*{\n    href: '/app/account',\n    icon: UserIcon,\n    title: 'Account'\n  },\n  {\n    href: '/login',\n    icon: LockIcon,\n    title: 'Login'\n  },\n  {\n    href: '/register',\n    icon: UserPlusIcon,\n    title: 'Register'\n  }*/\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={2}\n      >\n        <Avatar\n          className={classes.avatar}\n          component={RouterLink}\n          src={website.logo}\n          to=\"/app/wall\"\n        />\n        <Typography\n          className={classes.name}\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {website.title}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {website.description}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box flexGrow={1} />\n      <Box\n        p={2}\n        m={2}\n        bgcolor=\"background.dark\"\n      >\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          Out of sync?\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n        >\n          Restart services\n        </Typography>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          <Button\n            color=\"primary\"\n            component=\"a\"\n            href=\"#\"\n            variant=\"contained\"\n          >\n            Reload\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Home as Home,\n  BookOpen as BookOpen,\n  Bell as Bell,\n  Users as UsersIcon,\n  Settings as SettingsIcon\n\n  /*Lock as LockIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  UserPlus as UserPlusIcon*/\n} from 'react-feather';\nimport NavItem from './NavItem';\n\nconst user = {\n  avatar: './static/images/logo/baton.png',\n  name: 'Hiperfolio',\n  jobTitle: 'Portfolios Social Network'\n};\n\nconst items = [\n  {\n    href: '/app/dashboard',\n    icon: Home,\n    title: 'Wall'\n  },\n  {\n    href: '/app/products',\n    icon: BookOpen,\n    title: 'Create'\n  },\n  {\n    href: '/app/customers',\n    icon: UsersIcon,\n    title: 'Community'\n  },\n  {\n    href: '/404',\n    icon: Bell,\n    title: 'Notifications'\n  },\n  {\n    href: '/app/settings',\n    icon: SettingsIcon,\n    title: 'Settings'\n  },\n  /*{\n    href: '/app/account',\n    icon: UserIcon,\n    title: 'Account'\n  },\n  {\n    href: '/login',\n    icon: LockIcon,\n    title: 'Login'\n  },\n  {\n    href: '/register',\n    icon: UserPlusIcon,\n    title: 'Register'\n  }*/\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nconst RightBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={2}\n      >\n        <Avatar\n          className={classes.avatar}\n          component={RouterLink}\n          src={user.avatar}\n          to=\"/app/account\"\n        />\n        <Typography\n          className={classes.name}\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {user.name}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box flexGrow={1} />\n      <Box\n        p={2}\n        m={2}\n        bgcolor=\"background.dark\"\n      >\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          Out of sync?\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n        >\n          Restart services\n        </Typography>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          <Button\n            color=\"primary\"\n            component=\"a\"\n            href=\"#\"\n            variant=\"contained\"\n          >\n            Reload\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"right\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"right\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nRightBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nRightBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default RightBar;\n","import React from 'react';\n\nconst Logo = (props) => {\n  return (\n    <img\n      alt=\"Logo\"\n      src=\"./static/logo.svg\"\n      {...props}\n    />\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport {\nMoveToInbox,\nDrafts,\nSend,\nSettings,\nExitToApp,\nDataUsage,\nAccountBox,\n} from '@material-ui/icons';\n\nimport {\n  Link,\n  Avatar,\n  makeStyles\n} from '@material-ui/core';\n\nconst user = {\n  avatar: './static/images/avatars/avatar_3.png',\n  name: 'Paulo Martins',\n  job: 'Engenheiro Informático'\n};\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    disableScrollLock={true}\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    cursor: 'pointer',\n    width: 40,\n    height: 40,\n    '&:hover': {\n      boxShadow: '0px 0px 5px #333333;',\n    },\n  },\n}));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    //'&:focus': {\n    //  backgroundColor: theme.palette.primary.main,\n    //  '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n    //    color: theme.palette.common.white,\n    //  },\n    //},\n  }\n}))(MenuItem);\n\nexport default function UserMenu() {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Avatar\n        className={classes.avatar}\n        //component={RouterLink}\n        src={user.avatar}\n        onClick={handleClick}\n      />\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        onClick={handleClose}\n      >\n        <StyledMenuItem component={RouterLink} to=\"/account\">\n          <ListItemIcon>\n            <AccountBox fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Profile\" />\n        </StyledMenuItem>\n\n        <StyledMenuItem component={RouterLink} to=\"/login\">\n          <ListItemIcon>\n            <AccountBox fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Login\" />\n        </StyledMenuItem>\n\n        <StyledMenuItem component={RouterLink} to=\"/register\">\n          <ListItemIcon>\n            <AccountBox fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Register\" />\n        </StyledMenuItem>\n\n        <StyledMenuItem component={RouterLink} to=\"/cv\">\n          <ListItemIcon>\n            <Send fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"CV\" />\n        </StyledMenuItem>\n\n        <StyledMenuItem component={RouterLink} to=\"/activity\">\n          <ListItemIcon>\n            <DataUsage fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Activity\" />\n        </StyledMenuItem>\n\n        <StyledMenuItem component={RouterLink} to=\"/messages\">\n          <ListItemIcon>\n            <Drafts fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Messages\" />\n        </StyledMenuItem>\n\n        <StyledMenuItem component={RouterLink} to=\"/settings\">\n          <ListItemIcon>\n            <Settings fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </StyledMenuItem>\n\n        <StyledMenuItem component={RouterLink} to=\"/logout\">\n          <ListItemIcon>\n            <ExitToApp fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Logout\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Menu,\n  MenuItem,\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\n\nimport {\nMenu as MenuIcon,\nNotificationsOutlined as NotificationsIcon,\nInput as InputIcon,\nPostAdd\n} from '@material-ui/icons';\n\nimport Logo from 'src/components/Logo';\n\nimport UserMenu from './UserMenu';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n\nconst classes = useStyles();\nconst [notifications] = useState([]);\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <RouterLink to=\"/app/wall\">\n          <Logo />\n        </RouterLink>\n        <Box flexGrow={1} />\n        <Hidden mdDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton color=\"inherit\" style={{marginRight:\"7px\"}}>\n            <PostAdd aria-controls=\"simple-menu\" aria-haspopup=\"true\" />\n          </IconButton>\n\n          <UserMenu/>\n\n        </Hidden>\n\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport RightBar from './RightBar';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    /*overflow: 'hidden',*/\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    /*overflow: 'hidden',*/\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256,\n      paddingRight: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    /*overflow: 'hidden',*/\n\n        justifyContent: 'center',\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    /*overflow: 'auto',*/\n\n        maxWidth: '800px',\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n      <RightBar\n        clasName=\"hidden-xs\"\n      />\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(({\n  root: {},\n  toolbar: {\n    height: 64\n  }\n}));\n\nconst TopBar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar className={classes.toolbar}>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst user = {\n  avatar: '/static/images/avatars/avatar_6.png',\n  city: 'Los Angeles',\n  country: 'USA',\n  jobTitle: 'Senior Developer',\n  name: 'Katarina Smith',\n  timezone: 'GTM-7'\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst Profile = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.name}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${user.city} ${user.country}`}\n          </Typography>\n          <Typography\n            className={classes.dateText}\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"text\"\n        >\n          Upload picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst states = [\n  {\n    value: 'alabama',\n    label: 'Alabama'\n  },\n  {\n    value: 'new-york',\n    label: 'New York'\n  },\n  {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    firstName: 'Katarina',\n    lastName: 'Smith',\n    email: 'demo@devias.io',\n    phone: '',\n    state: 'Alabama',\n    country: 'USA'\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Profile from './Profile';\nimport ProfileDetails from './ProfileDetails';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Account = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Account\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xs={12}\n          >\n            <Profile />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Account;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, customers, ...rest }) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedCustomerIds.length === customers.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedCustomerIds.length > 0\n                      && selectedCustomerIds.length < customers.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Email\n                </TableCell>\n                <TableCell>\n                  Location\n                </TableCell>\n                <TableCell>\n                  Phone\n                </TableCell>\n                <TableCell>\n                  Registration date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {customers.slice(0, limit).map((customer) => (\n                <TableRow\n                  hover\n                  key={customer.id}\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, customer.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      <Avatar\n                        className={classes.avatar}\n                        src={customer.avatarUrl}\n                      >\n                        {getInitials(customer.name)}\n                      </Avatar>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {customer.name}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {customer.email}\n                  </TableCell>\n                  <TableCell>\n                    {`${customer.address.city}, ${customer.address.state}, ${customer.address.country}`}\n                  </TableCell>\n                  <TableCell>\n                    {customer.phone}\n                  </TableCell>\n                  <TableCell>\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={customers.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array.isRequired\n};\n\nexport default Results;\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button className={classes.importButton}>\n          Import\n        </Button>\n        <Button className={classes.exportButton}>\n          Export\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add customer\n        </Button>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search customer\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'West Virginia',\n      city: 'Parkersburg',\n      street: '2849 Fulton Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_3.png',\n    createdAt: 1555016400000,\n    email: 'ekaterina.tankova@devias.io',\n    name: 'Ekaterina Tankova',\n    phone: '304-428-3097'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Bristow',\n      city: 'Iowa',\n      street: '1865  Pleasant Hill Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_4.png',\n    createdAt: 1555016400000,\n    email: 'cao.yu@devias.io',\n    name: 'Cao Yu',\n    phone: '712-351-5711'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Georgia',\n      city: 'Atlanta',\n      street: '4894  Lakeland Park Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_2.png',\n    createdAt: 1555016400000,\n    email: 'alexa.richardson@devias.io',\n    name: 'Alexa Richardson',\n    phone: '770-635-2682'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Ohio',\n      city: 'Dover',\n      street: '4158  Hedge Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_5.png',\n    createdAt: 1554930000000,\n    email: 'anje.keizer@devias.io',\n    name: 'Anje Keizer',\n    phone: '908-691-3242'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Texas',\n      city: 'Dallas',\n      street: '75247'\n    },\n    avatarUrl: '/static/images/avatars/avatar_6.png',\n    createdAt: 1554757200000,\n    email: 'clarke.gillebert@devias.io',\n    name: 'Clarke Gillebert',\n    phone: '972-333-4106'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Bakerfield',\n      street: '317 Angus Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_1.png',\n    createdAt: 1554670800000,\n    email: 'adam.denisov@devias.io',\n    name: 'Adam Denisov',\n    phone: '858-602-3409'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Redondo Beach',\n      street: '2188  Armbrester Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_7.png',\n    createdAt: 1554325200000,\n    email: 'ava.gregoraci@devias.io',\n    name: 'Ava Gregoraci',\n    phone: '415-907-2647'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Nevada',\n      city: 'Las Vegas',\n      street: '1798  Hickory Ridge Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_8.png',\n    createdAt: 1523048400000,\n    email: 'emilee.simchenko@devias.io',\n    name: 'Emilee Simchenko',\n    phone: '702-661-1654'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Michigan',\n      city: 'Detroit',\n      street: '3934  Wildrose Lane'\n    },\n    avatarUrl: '/static/images/avatars/avatar_9.png',\n    createdAt: 1554702800000,\n    email: 'kwak.seong.min@devias.io',\n    name: 'Kwak Seong-Min',\n    phone: '313-812-8947'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Utah',\n      city: 'Salt Lake City',\n      street: '368 Lamberts Branch Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_10.png',\n    createdAt: 1522702800000,\n    email: 'merrile.burgett@devias.io',\n    name: 'Merrile Burgett',\n    phone: '801-301-7894'\n  }\n];\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport data from './data';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst UsersView = () => {\n  const classes = useStyles();\n  const [customers] = useState(data);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customers\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar />\n        <Box mt={3}>\n          <Results customers={customers} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default UsersView;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  SvgIcon,\n  IconButton,\n  Badge,\n  Container,\n  Card,\n  CardMedia,\n  CardHeader,CardActionArea,\n  CardContent,\n  Divider,\n  Link,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nimport { withStyles } from '@material-ui/core/styles';\n\n//ICONS\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MessageIcon from '@material-ui/icons/Message';\n\nimport { Award as Artifact } from 'react-feather';\nimport { Send as Activity } from 'react-feather';\nimport { MessageCircle as Text } from 'react-feather';\n\nimport Page from 'src/components/Page';\nimport {\n  MoreHorizontal as MoreHorizontal,\n  Paperclip as Paperclip,\n} from 'react-feather';\n\nconst componentsMap = { Artifact, Activity, Text };\n\nfunction TypePOst(props) {\n  const type = props.type;\n  if (type==\"Artifact\") {\n  return (\n    <React.Fragment>\n      <Artifact />;\n      <Typography>\n      DID THIS!\n      </Typography>\n    </React.Fragment>\n  )\n  }\n  else if (type==\"Activity\") {\n    return <Activity />;\n  }\n  else if (type==\"Text\") {\n    return <Text />;\n  }\n  /*const isLoggedIn = props.isLoggedIn;\n  if (isLoggedIn) {\n    return <UserGreeting />;\n  }\n  return <GuestGreeting />;*/\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  },\n  userName: {\n    fontWeight: 'bold',\n    color:'#000000'\n  },\n  userPhoto: {\n    borderRadius:'50%',\n    marginRight:'10px',\n  }\n}));\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    right: -15,\n    top: 4,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 4px',\n  },\n}))(Badge);\n\nconst PostCard = ({ className, post, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card style={{position:\"relative\", overflow:\"visible\"}}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n\n      <CardContent>\n\n      <Card style={{position:\"absolute\", top:\"0px\", left:\"-46px\", padding:\"5px 10px\"}}>\n      <SvgIcon \n              fontSize=\"medium\"\n              color=\"action\"\n            >\n              <TypePOst type={post.typePost} />\n            </SvgIcon>\n        </Card>\n\n        <Box\n          display=\"flex\"\n          justifyContent=\"left\"\n          alignItems=\"center\"\n          mb={3}\n          style={{position: 'relative'}}\n        >\n          <Avatar\n            className={classes.userPhoto}\n            alt=\"User Photo\"\n            src={`/static/images/avatars/avatar_${post.user}.png`}\n            variant=\"square\"\n          />\n\n            <Box\n              display=\"block\"\n              justifyContent=\"left\"\n              flexDirection=\"row\"\n              alignItems=\"top\"\n              lineHeight={0}\n            >\n              <Typography display=\"block\" className={classes.userName} color=\"textSecondary\" m={20} p={30} lineHeight={0}>\n              Paulo Martins\n              </Typography>\n\n              <Typography display=\"block\" \n              color=\"textSecondary\" \n              m={0} \n              p={0} \n              lineHeight={0}\n              variant=\"body2\"\n              >\n              Engenheiro Informático\n              </Typography>\n            </Box>\n\n\n            <Box\n              display=\"block\"\n              justifyContent=\"right\"\n              flexDirection=\"row-reverse\"\n              alignItems=\"center\"\n              style={{position: 'absolute', top:0, right: 0}}\n            >\n            <Typography display=\"block\" color=\"textSecondary\" m={0} p={0} lineHeight={0}>\n              <Link\n              href=\"#\"\n              >\n              <MoreHorizontal />\n              </Link>\n            </Typography>\n            </Box>\n\n        </Box>\n\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {post.title}\n        </Typography>\n</CardContent>\n\n\n     <CardMedia\n        className={classes.media}\n        component=\"img\"\n        src={`/static/images/artifacts/${post.thumbnail}`}\n        title=\"Artifact\"\n      />\n\n<CardContent>\n        <Typography\n          align=\"left\"\n          color=\"textPrimary\"\n          variant=\"body1\"\n        >\n          {post.body}\n        </Typography>\n      </CardContent>\n\n\n      <Box flexGrow={1} />\n      <Divider />\n      <Box p={2}>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={2}\n        >\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n\n\n\n        <IconButton aria-label=\"cart\" p={0} title=\"Vote up\" style={{padding:'0px', marginRight:'26px'}}>\n          <StyledBadge badgeContent='99' color=\"secondary\">\n            <ArrowUpwardIcon />\n          </StyledBadge>\n        </IconButton>\n\n        <IconButton aria-label=\"cart\" p={0} title=\"Vote down\" style={{padding:'0'}}>\n            <ArrowDownwardIcon />\n        </IconButton>\n\n\n\n\n         {/*<Link\n          href=\"#\"\n          >\n            <ArrowUpwardIcon \n          />\n          </Link>\n\n         <Link\n          href=\"#\"\n          >\n            <ArrowDownwardIcon \n              color=\"action\"\n            />\n          </Link>\n\n          <Typography\n            color=\"textSecondary\"\n            display=\"inline\"\n            variant=\"body2\"\n          >\n          (55)\n          </Typography>\n          */}\n\n\n            <Box\n            display=\"flex\"\n            align=\"left\"\n            alignItems=\"center\"\n            pl={2}\n            >\n              <AccessTimeIcon\n                className={classes.statsIcon}\n                color=\"action\"\n              />\n              <Typography\n                color=\"textSecondary\"\n                display=\"inline\"\n                variant=\"body2\"\n              >\n                Updated: 2h\n              </Typography>\n            </Box>\n\n            <Box\n            display=\"flex\"\n            align=\"left\"\n            alignItems=\"center\"\n            pl={2}\n            >\n              <AttachFileIcon\n                color=\"action\"\n              />\n              <Typography\n                color=\"textSecondary\"\n                display=\"inline\"\n                variant=\"body2\"\n              >\n                Assets: 3 {' '}\n              </Typography>\n            </Box>\n          </Grid>\n          \n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <GetAppIcon\n              className={classes.statsIcon}\n              color=\"action\"\n            />\n            <Typography\n              color=\"textSecondary\"\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              {post.views}\n              {' '}\n              Clicks\n            </Typography>\n          </Grid>\n\n\n        </Grid>\n      </Box>\n    </Card>\n  );\n};\n\nPostCard.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default PostCard;\n","import React, { Component } from 'react';\n import {\n  Box,\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport Page from 'src/components/Page';\nimport PostCard from './PostCard';\n\n\n//const API = 'https://hn.algolia.com/api/v1/search?query=redux';\n//const API = 'http://10.0.2.2:8080/auth/';\nvar django_server='http://10.0.3.2/8080/auth';\nvar rust_server ='http://127.0.0.1:8002';\nvar apigateway ='http://127.0.0.1:8000';\n\nconst POSTS = 'http://10.0.3.2:8003/posts';\n\nconst SERVER = POSTS;\n\n//const SERVER = 'http://127.0.0.1:8080/posts';\n//Android emulator local ip:\n//const SERVER = 'http://10.0.2.2:8080/posts';\n \n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      data: \"\",\n      postsData: \"\",\n      isLoading: true,\n      error: null,\n    };\n  }\n \n  componentDidMount() {\n    this.setState({ isLoading: true });\n \n    /*fetch(API)\n      .then(response => response.json())\n      .then(data => this.setState({ data: data.data, isLoading: false }))\n      .catch(error => this.setState({ error, isLoading: false }));*/\n\n    fetch(SERVER, {\n        method: 'GET', \n        //headers: new Headers({\n        headers: {\n          //'Authorization': 'Basic '+btoa('paulo:unicornio'),\n          'Authorization': 'Basic cGF1bG86dW5pY29ybmlv',\n          //'X-CSRFToken': 'gTiPlygvqXHH3NEDOO23x9yhVUAv2MvOkMKH3wdPKjh3tYfjqeaqACLU74uOcGxu',\n          //'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        }, \n        /*body: JSON.stringify({\n          'client_id': '(API KEY)',\n          'client_secret': '(API SECRET)',\n          'grant_type': 'client_credentials'\n          })*/\n      })\n      //.then(response => response.text())\n      .then(response => response.json())\n      .then(data => this.setState({ postsData: data, isLoading: false }))\n      .catch(error => this.setState({ error, isLoading: false }));\n\n    /*fetch(SERVER)\n      .then(response => response.text())\n      .then(data => this.setState({ data: data, isLoading: false }))\n      .catch(error => this.setState({ error, isLoading: false }));*/\n\n\n  }\n\n\n \n  render() {\n    const { postsData, isLoading, error } = this.state;\n \n    if (error) {\n      return <p>{error.message}</p>;\n    }\n \n    if (isLoading) {\n      return <p>Loading ...</p>;\n    }\n \n    return (\n    \n\n    <Page\n      title=\"Posts\"\n    >\n      <Container maxWidth={false}>\n        \n        <Box mt={3}>\n          <Grid\n            container\n            spacing={3}\n          >\n            {postsData.results.map((post) => (\n              <Grid\n                item\n                key={post.id}\n                lg={12}\n                md={12}\n                xs={12}\n              >\n                <PostCard\n                  post={post}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n        <Box\n          mt={3}\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Pagination\n            color=\"primary\"\n            count={3}\n            size=\"small\"\n          />\n        </Box>\n      </Container>\n    </Page>\n\n\n\n\n      /*<ul>\n        {postsData.results.map(item =>\n          <li key={item.id}>\n            <a href=\"http://www.google.pt\">{item.title}</a>\n          </li>\n        )}\n      </ul>*/\n\n      /*<h1>\n      {serverData.map(post =>\n        <p>{post.id}</p>\n      )}\n      </h1>*/\n      /*<h1>Print data: {JSON.stringify(postsData)}</h1>*/\n    );\n  }\n\n}\n\nexport default App;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { PenTool as PenTool } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n\n      <Box \n          style={{width:'100%'}}\n      >\n            <Box>\n              <TextField\n                size=\"small\"\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <PenTool />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Share your creations\"\n                variant=\"outlined\"\n              />\n            </Box>\n\n      </Box>\n\n\n\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Container,\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Divider,\n  SvgIcon,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nimport { Award as Artifact } from 'react-feather';\nimport { Send as Activity } from 'react-feather';\nimport { MessageCircle as Text } from 'react-feather';\n\nimport Toolbar from './Toolbar';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  },\n  userName: {\n    fontWeight: 'bold',\n    color:'#000000'\n  },\n  userPhoto: {\n    borderRadius:'50%',\n    marginRight:'10px',\n  }\n}));\n\nconst Post = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth={false}>\n\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          justifyContent=\"left\"\n          alignItems=\"center\"\n          mb={3}\n          style={{position: 'relative'}}\n        >\n          <Avatar\n            className={classes.userPhoto}\n            alt=\"User Photo\"\n            src=\"\"\n            variant=\"square\"\n          />\n\n            <Toolbar />\n\n        </Box>\n\n<Divider />\n\n          <Grid style={{paddingTop: \"10px\"}}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={8}\n            container\n          >\n\n          <Grid item style={{paddingBottom: \"20px\"}}>\n          <Button className={classes.importButton} \n            //color=\"primary\"\n            variant=\"contained\"\n          >\n            Did this! &nbsp; <SvgIcon\n              fontSize=\"small\"\n              //color=\"action\"\n            >\n              <Artifact />\n            </SvgIcon>\n          </Button>\n          </Grid>\n\n          <Grid item style={{paddingBottom: \"20px\"}}>\n          <Button className={classes.exportButton} \n            //color=\"primary\"\n            variant=\"contained\"\n          >\n            Lived this! &nbsp; <SvgIcon\n              fontSize=\"small\"\n              //color=\"action\"\n            >\n              <Activity />\n            </SvgIcon>\n          </Button>\n          </Grid>\n\n          <Grid item style={{paddingBottom: \"20px\"}}>\n          <Button \n            //color=\"primary\"\n            variant=\"contained\"\n          >\n            Said this! &nbsp; <SvgIcon\n              fontSize=\"small\"\n              //color=\"action\"\n            >\n              <Text />\n            </SvgIcon>\n          </Button>\n          </Grid>\n\n        </Grid>\n      </CardContent>\n    </Card>\n  </Container>\n  );\n};\n\nPost.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\n\nexport default Post;\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  Card,\n  CardContent\n} from '@material-ui/core';\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n}));\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein, price) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    price,\n    history: [\n      { date: '/services/api', customerId: '0.0.0.0', amount: 300, priority:2 },\n      { date: '/external/api', customerId: '193.137.11.51', amount: -1, priority: 5 },\n      { date: '/api', customerId: '193.154.12.33', amount: 100, priority: 3 },\n      { date: '/datalake/api', customerId: 'localhost', amount: 500, priority: 4 },\n    ],\n  };\n}\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.calories}</TableCell>\n        <TableCell align=\"right\">{row.fat}</TableCell>\n        <TableCell align=\"right\">{row.carbs}</TableCell>\n        <TableCell align=\"right\">{row.protein}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                ROUTES / ENDPOINTS\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Relative Path</TableCell>\n                    <TableCell>Host</TableCell>\n                    <TableCell align=\"right\">Max Traffic</TableCell>\n                    <TableCell align=\"right\">Priority</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.date}\n                      </TableCell>\n                      <TableCell>{historyRow.customerId}</TableCell>\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                      <TableCell align=\"right\">{historyRow.priority}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    calories: PropTypes.number.isRequired,\n    carbs: PropTypes.number.isRequired,\n    fat: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        customerId: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    protein: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nconst rows = [\n  createData('api', 159, 52, 'auto', 'online'),\n  createData('dashboard', 237, 0, 'auto', 'offline'),\n  createData('crud', 262, 102, 'limit', 'online'),\n  createData('json2csv', 305, 77, 'auto', 'online'),\n  createData('shoppingCart', 356, 66,'fixed', 'online'),\n];\n\nconst Services = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n\t<div className={classes.root} style={{ marginTop:0, paddingTop:0 }}>\n\t\t<h2 style={{ marginBottom:15 }}>Microservices</h2>\n\t\t<TableContainer component={Paper}>\n\t\t  <Table aria-label=\"collapsible table\">\n\t\t    <TableHead>\n\t\t      <TableRow style={{ backgroundColor:'#000000' }}>\n\t\t        <TableCell />\n\t\t        <TableCell style={{ color:'#ffffff' }}>Namespace</TableCell>\n\t\t        <TableCell style={{ color:'#ffffff' }} align=\"right\">Visits (Total)</TableCell>\n\t\t        <TableCell style={{ color:'#ffffff' }} align=\"right\">Visits (Active)</TableCell>\n\t\t        <TableCell style={{ color:'#ffffff' }} align=\"right\">Balancer Mode</TableCell>\n\t\t        <TableCell style={{ color:'#ffffff' }} align=\"right\">State</TableCell>\n\t\t      </TableRow>\n\t\t    </TableHead>\n\t\t    <TableBody>\n\t\t      {rows.map((row) => (\n\t\t        <Row key={row.name} row={row} />\n\t\t      ))}\n\t\t    </TableBody>\n\t\t  </Table>\n\t\t</TableContainer>\n\t</div>\n  );\n};\n\nServices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Services;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Budget = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL SERVICES\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              187\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <MoneyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ArrowDownwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            12%\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Offline\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nBudget.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Budget;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst data = [\n  {\n    id: uuid(),\n    ref: 'CDD1049',\n    amount: 30.5,\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    createdAt: 1555016400000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1048',\n    amount: 25.1,\n    customer: {\n      name: 'Cao Yu'\n    },\n    createdAt: 1555016400000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1047',\n    amount: 10.99,\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    createdAt: 1554930000000,\n    status: 'refunded'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1046',\n    amount: 96.43,\n    customer: {\n      name: 'Anje Keizer'\n    },\n    createdAt: 1554757200000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1045',\n    amount: 32.54,\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1044',\n    amount: 16.76,\n    customer: {\n      name: 'Adam Denisov'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestOrders = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [orders] = useState(data);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Latest Customers\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={800}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Order Ref\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Date\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((order) => (\n                <TableRow\n                  hover\n                  key={order.id}\n                >\n                  <TableCell>\n                    {order.ref}\n                  </TableCell>\n                  <TableCell>\n                    {order.customer.name}\n                  </TableCell>\n                  <TableCell>\n                    {moment(order.createdAt).format('DD/MM/YYYY')}\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      color=\"primary\"\n                      label={order.status}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst data = [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/static/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/static/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/static/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/static/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/static/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n\nconst useStyles = makeStyles(({\n  root: {\n    height: '100%'\n  },\n  image: {\n    height: 48,\n    width: 48\n  }\n}));\n\nconst LatestProducts = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [products] = useState(data);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        subtitle={`${products.length} in total`}\n        title=\"Latest Accesses\"\n      />\n      <Divider />\n      <List>\n        {products.map((product, i) => (\n          <ListItem\n            divider={i < products.length - 1}\n            key={product.id}\n          >\n            <ListItemAvatar>\n              <img\n                alt=\"Product\"\n                className={classes.image}\n                src={product.imageUrl}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              primary={product.name}\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\n            />\n            <IconButton\n              edge=\"end\"\n              size=\"small\"\n            >\n              <MoreVertIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProducts;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [18, 5, 19, 27, 29, 19, 20],\n        label: 'This year'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: [11, 20, 12, 29, 30, 25, 13],\n        label: 'Last year'\n      }\n    ],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={(\n          <Button\n            endIcon={<ArrowDropDownIcon />}\n            size=\"small\"\n            variant=\"text\"\n          >\n            Last 7 days\n          </Button>\n        )}\n        title=\"Traffic\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          height={400}\n          position=\"relative\"\n        >\n          <Bar\n            data={data}\n            options={options}\n          />\n        </Box>\n      </CardContent>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  LinearProgress,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.orange[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TasksProgress = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              SERVER LOAD\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              75.5%\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <InsertChartIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box mt={3}>\n          <LinearProgress\n            value={75.5}\n            variant=\"determinate\"\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTasksProgress.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TasksProgress;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.green[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.green[900]\n  },\n  differenceValue: {\n    color: colors.green[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalCustomers = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL VISITS\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              1,600\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ArrowUpwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            16%\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalCustomers.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalCustomers;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.indigo[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TotalProfit = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL PROFIT\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              $23,200\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AttachMoneyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport TabletIcon from '@material-ui/icons/Tablet';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TrafficByDevice = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          colors.indigo[500],\n          colors.red[600],\n          colors.orange[600]\n        ],\n        borderWidth: 8,\n        borderColor: colors.common.white,\n        hoverBorderColor: colors.common.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: 63,\n      icon: LaptopMacIcon,\n      color: colors.indigo[500]\n    },\n    {\n      title: 'Tablet',\n      value: 15,\n      icon: TabletIcon,\n      color: colors.red[600]\n    },\n    {\n      title: 'Mobile',\n      value: 23,\n      icon: PhoneIcon,\n      color: colors.orange[600]\n    }\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Traffic by Device\" />\n      <Divider />\n      <CardContent>\n        <Box\n          height={300}\n          position=\"relative\"\n        >\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </Box>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          {devices.map(({\n            color,\n            icon: Icon,\n            title,\n            value\n          }) => (\n            <Box\n              key={title}\n              p={1}\n              textAlign=\"center\"\n            >\n              <Icon color=\"action\" />\n              <Typography\n                color=\"textPrimary\"\n                variant=\"body1\"\n              >\n                {title}\n              </Typography>\n              <Typography\n                style={{ color }}\n                variant=\"h2\"\n              >\n                {value}\n                %\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTrafficByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TrafficByDevice;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\n\nimport Posts from './Posts';\nimport Post from './Post';\n\nimport Services from './Services';\n\nimport Page from 'src/components/Page';\nimport Budget from './Budget';\nimport LatestOrders from './LatestOrders';\nimport LatestProducts from './LatestProducts';\nimport Sales from './Sales';\nimport TasksProgress from './TasksProgress';\nimport TotalCustomers from './TotalCustomers';\nimport TotalProfit from './TotalProfit';\nimport TrafficByDevice from './TrafficByDevice';\n\n\n\n\n\n/*import PropTypes from 'prop-types';\n//import { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein, price) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    price,\n    history: [\n      { date: '2020-01-05', customerId: '11091700', amount: 3 },\n      { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\n    ],\n  };\n}\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.calories}</TableCell>\n        <TableCell align=\"right\">{row.fat}</TableCell>\n        <TableCell align=\"right\">{row.carbs}</TableCell>\n        <TableCell align=\"right\">{row.protein}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                ROUTES\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Customer</TableCell>\n                    <TableCell align=\"right\">Amount</TableCell>\n                    <TableCell align=\"right\">Total price ($)</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.date}\n                      </TableCell>\n                      <TableCell>{historyRow.customerId}</TableCell>\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                      <TableCell align=\"right\">\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    calories: PropTypes.number.isRequired,\n    carbs: PropTypes.number.isRequired,\n    fat: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        customerId: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    protein: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\n];\n\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n      \n      \t<Post />\n        \n        <br />\n\n        <Posts />\n\n\n\n\n      \t\n        {/*<Grid\n          container\n          spacing={3}\n        >       \n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <Budget />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalCustomers />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TasksProgress />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalProfit />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <Sales />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <TrafficByDevice />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <LatestProducts />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <LatestOrders />\n          </Grid>\n        </Grid>*/}\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { SvgIcon } from '@material-ui/core';\n\nconst Facebook = (props) => {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M9.53144612,22.005 L9.53144612,13.0552149 L6.44166667,13.0552149 L6.44166667,9.49875 L9.53144612,9.49875 L9.53144612,6.68484375 C9.53144612,5.19972656 9.95946769,4.04680661 10.8155103,3.22608401 C11.6715529,2.4053613 12.808485,1.995 14.2263057,1.995 C15.3766134,1.995 16.3129099,2.04710915 17.0351961,2.15132812 L17.0351961,5.3169726 L15.1090998,5.3169726 C14.3868137,5.3169726 13.8919142,5.47330073 13.6244006,5.78595698 C13.4103902,6.04650407 13.3033846,6.46337874 13.3033846,7.03658198 L13.3033846,9.49875 L16.71418,9.49875 L16.2326559,13.0552149 L13.3033846,13.0552149 L13.3033846,22.005 L9.53144612,22.005 Z\" />\n    </SvgIcon>\n  );\n};\n\nexport default Facebook;\n","import React from 'react';\nimport { SvgIcon } from '@material-ui/core';\n\nconst Google = (props) => {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\n    </SvgIcon>\n  );\n};\n\nexport default Google;\n","import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: 'demo@devias.io',\n              password: 'Password123'\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={() => {\n              navigate('/app/dashboard', { replace: true });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Sign in\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Sign in on the internal platform\n                  </Typography>\n                </Box>\n                <Grid\n                  container\n                  spacing={3}\n                >\n                  <Grid\n                    item\n                    xs={12}\n                    md={6}\n                  >\n                    <Button\n                      color=\"primary\"\n                      fullWidth\n                      startIcon={<FacebookIcon />}\n                      onClick={handleSubmit}\n                      size=\"large\"\n                      variant=\"contained\"\n                    >\n                      Login with Facebook\n                    </Button>\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    md={6}\n                  >\n                    <Button\n                      fullWidth\n                      startIcon={<GoogleIcon />}\n                      onClick={handleSubmit}\n                      size=\"large\"\n                      variant=\"contained\"\n                    >\n                      Login with Google\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Box\n                  mt={3}\n                  mb={1}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    or login with email address\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Don&apos;t have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/register\"\n                    variant=\"h6\"\n                  >\n                    Sign up\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default LoginView;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFoundView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"404\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"md\">\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"h1\"\n          >\n            404: The page you are looking for isn’t here\n          </Typography>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            You either tried some shady route or you came here by mistake.\n            Whichever it is, try using the navigation\n          </Typography>\n          <Box textAlign=\"center\">\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            />\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button className={classes.importButton}>\n          Import\n        </Button>\n        <Button className={classes.exportButton}>\n          Export\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add product\n        </Button>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search product\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Results = ({ className, result, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mb={3}\n        >\n          <Avatar\n            alt=\"Result\"\n            src={result.media}\n            variant=\"square\"\n          />\n        </Box>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {result.title}\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"body1\"\n        >\n          {result.description}\n        </Typography>\n      </CardContent>\n      <Box flexGrow={1} />\n      <Divider />\n      <Box p={2}>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={2}\n        >\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <AccessTimeIcon\n              className={classes.statsIcon}\n              color=\"action\"\n            />\n            <Typography\n              color=\"textSecondary\"\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              Updated 2hr ago\n            </Typography>\n          </Grid>\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <GetAppIcon\n              className={classes.statsIcon}\n              color=\"action\"\n            />\n            <Typography\n              color=\"textSecondary\"\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              {result.totalDownloads}\n              {' '}\n              Downloads\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  result: PropTypes.object.isRequired\n};\n\nexport default Results;\n","import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    createdAt: '27/03/2019',\n    description: 'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\n    media: '/static/images/products/product_1.png',\n    title: 'Dropbox',\n    totalDownloads: '594'\n  },\n  {\n    id: uuid(),\n    createdAt: '31/03/2019',\n    description: 'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\n    media: '/static/images/products/product_2.png',\n    title: 'Medium Corporation',\n    totalDownloads: '625'\n  },\n  {\n    id: uuid(),\n    createdAt: '03/04/2019',\n    description: 'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\n    media: '/static/images/products/product_3.png',\n    title: 'Slack',\n    totalDownloads: '857'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'Lyft is an on-demand transportation company based in San Francisco, California.',\n    media: '/static/images/products/product_4.png',\n    title: 'Lyft',\n    totalDownloads: '406'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'GitHub is a web-based hosting service for version control of code using Git.',\n    media: '/static/images/products/product_5.png',\n    title: 'GitHub',\n    totalDownloads: '835'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\n    media: '/static/images/products/product_6.png',\n    title: 'Squarespace',\n    totalDownloads: '835'\n  }\n];\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport Page from 'src/components/Page';\nimport Toolbar from './Toolbar';\nimport Results from './Results';\nimport data from './data';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  results: {\n    height: '100%'\n  }\n}));\n\nconst CommunitiesView = () => {\n  const classes = useStyles();\n  const [results] = useState(data);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Communities\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar />\n        <Box mt={3}>\n          <Grid\n            container\n            spacing={3}\n          >\n            {results.map((result) => (\n              <Grid\n                item\n                key={result.id}\n                lg={4}\n                md={6}\n                xs={12}\n              >\n                <Results\n                  className={classes.results}\n                  result={result}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n        <Box\n          mt={3}\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Pagination\n            color=\"primary\"\n            count={3}\n            size=\"small\"\n          />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default CommunitiesView;\n","import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              firstName: '',\n              lastName: '',\n              password: '',\n              policy: false\n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                firstName: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n            onSubmit={() => {\n              navigate('/app/dashboard', { replace: true });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  ml={-1}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst Password = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Notifications from './Notifications';\nimport Password from './Password';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SettingsView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Notifications />\n        <Box mt={3}>\n          <Password />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SettingsView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { PenTool as PenTool } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n\n      <Box \n          style={{width:'100%'}}\n      >\n            <Box>\n              <TextField\n                size=\"small\"\n                fullWidth\n                autoFocus={true}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <PenTool />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"A short awesome title...\"\n                variant=\"outlined\"\n              />\n            </Box>\n\n      </Box>\n\n\n\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst Password = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  Grid,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\n\nfunction getAtualDate() {\n  let today = new Date();\n  let date = today.getFullYear()+'-'+(\"0\" + (today.getMonth() + 1)).slice(-2)+'-'+(\"0\" + today.getDate()).slice(-2);\n  //var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  return date;\n}\n\nconst dateN = getAtualDate();\n\nconst FormMeta = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n\n  return (\n\n      <Card>\n        <CardHeader\n          subheader=\"Optional metadata for the Curriculum Vitae\"\n          title=\"Description\"\n        />\n        <Divider />\n        <CardContent>\n\n        <TextField\n          id=\"filled-multiline-flexible\"\n          label=\"Description / Free text\"\n          multiline\n          rows={2}\n          rowsMax={10}\n          variant=\"filled\"\n          fullWidth={true}\n        />\n\n        <Grid style={{marginTop: \"0px\"}}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n          container\n        >\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              label=\"When?\"\n              type=\"date\"\n              defaultValue={dateN}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              margin=\"normal\"\n              name=\"when\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              label=\"Where?\"\n              margin=\"normal\"\n              name=\"where\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              label=\"For?\"\n              margin=\"normal\"\n              name=\"for\"\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n\n\n        </CardContent>\n\n      </Card>\n  );\n};\n\nFormMeta.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FormMeta;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  ButtonBase,\n  Typography,\n  Card,\n  Grid,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    position: 'relative',\n    height: 200,\n    [theme.breakpoints.down('xs')]: {\n      width: '100% !important',\n      height: 100,\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15,\n      },\n      '& $imageMarked': {\n        opacity: 0,\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor',\n      },\n    },\n  },\n  focusVisible: {},\n  imageButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white,\n  },\n  imageSrc: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n  },\n  imageBackdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity'),\n  },\n  imageTitle: {\n    position: 'relative',\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: 'absolute',\n    bottom: -2,\n    left: 'calc(50% - 9px)',\n    transition: theme.transitions.create('opacity'),\n  },\n}));\n\nconst FormAssets = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n      <Card>\n        <CardHeader\n          subheader=\"Attach your creations\"\n          title=\"Assets\"\n        />\n        <Divider />\n        <CardContent>\n\n        <Grid style={{marginTop: \"0px\"}}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n          container\n        >\n          <Grid item xs={6}>\n            <ButtonBase\n              focusRipple\n              key=\"{image.title}\"\n              className={classes.image}\n              focusVisibleClassName={classes.focusVisible}\n              style={{\n                width: '100%',\n              }}\n            >\n              <span\n                className={classes.imageSrc}\n                style={{\n                  backgroundImage: `url(/static/images/assets.jpg)`,\n                }}\n              />\n              <span className={classes.imageBackdrop} />\n              <span className={classes.imageButton}>\n                <Typography\n                  component=\"span\"\n                  variant=\"subtitle1\"\n                  color=\"inherit\"\n                  className={classes.imageTitle}\n                >\n                  ADD ASSETS\n                  <span className={classes.imageMarked} />\n                </Typography>\n              </span>\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={6}>\n            <ButtonBase\n              focusRipple\n              key=\"{image.title}\"\n              className={classes.image}\n              focusVisibleClassName={classes.focusVisible}\n              style={{\n                width: '100%',\n              }}\n            >\n              <span\n                className={classes.imageSrc}\n                style={{\n                  backgroundImage: `url(/static/images/illustration.jpg)`,\n                }}\n              />\n              <span className={classes.imageBackdrop} />\n              <span className={classes.imageButton}>\n                <Typography\n                  component=\"span\"\n                  variant=\"subtitle1\"\n                  color=\"inherit\"\n                  className={classes.imageTitle}\n                >\n                  ADD ILLUSTRATION\n                  <span className={classes.imageMarked} />\n                </Typography>\n              </span>\n            </ButtonBase>\n          </Grid>\n        </Grid>\n\n\n        </CardContent>\n\n      </Card>\n  );\n};\n\nFormAssets.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FormAssets;\n","// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst SERVER = 'http://localhost:5820/esco/query';\n\nfunction queryOccupation(wordInput) {\n  let word = wordInput.toLowerCase();\n  var q = `\n  select ?occupation where { \n  ?o a <http://data.europa.eu/esco/model#Occupation> .\n  ?o <http://www.w3.org/2004/02/skos/core#prefLabel> ?occupation .\n  FILTER langMatches( lang(?occupation), \"pt\" ) .\n  FILTER( contains( lcase(str(?occupation)), \"${word}\" ) ) .\n  } LIMIT 200`;\n\n  //FILTER( strStarts( ?occupation, \"${wordInput}\" ) ) .\n\n  return q;\n}\n\nconst Jobs = ({ className, ...rest }) => {\n\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n  const [inputWord, setInputWord] = React.useState('');\n\nfunction buildOptions(d) {\n  var data = d.results.bindings;\n  setOptions( Object.keys(data).map((key) => data[key]) )\n    //ata.results.map(item => item))\n}\n\nfunction changeOptionBaseOnValue(val) {\n    /*fetch(\"http://127.0.0.1:8003/posts\", {\n        method: 'GET', \n        headers: {\n          'Authorization': 'Basic cGF1bG86dW5pY29ybmlv',\n          'Content-Type': 'application/json',\n        }, \n      })*/\n      let query = queryOccupation(val);\n      fetch(SERVER+'?query='+encodeURIComponent(query), {\n          method: 'GET',\n          //headers: new Headers({\n          headers: {\n            'Authorization': 'Basic '+btoa('admin:admin'),\n            //'Authorization': 'Basic YWRtaW46YWRtaW4=',\n            //'Authorization': 'Basic cGF1bG86dW5pY29ybmlv',\n            //'X-CSRFToken': 'gTiPlygvqXHH3NEDOO23x9yhVUAv2MvOkMKH3wdPKjh3tYfjqeaqACLU74uOcGxu',\n            //'Accept': 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/sparql-results+json',\n          },\n          //body: JSON.stringify({\n          //  query: 'select ?occupation where {?o a <http://data.europa.eu/esco/model#Occupation> . ?o <http://www.w3.org/2004/02/skos/core#prefLabel> ?occupation . FILTER langMatches( lang(?occupation), \"pt\" )} LIMIT 5',\n          //  })\n          //body: {\n          //  'query': query\n          //}\n        })\n      .then(response => response.json())\n      .then(data => buildOptions(data) )\n      //.catch(error => this.setState({ error, isLoading: false }));\n\n      \n}\n\n  return (\n    <Autocomplete\n      id=\"asynchronous\"\n      style={{ width:\"100%\" }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n        setOptions([]);\n      }}\n      getOptionSelected={(option, value) => option.occupation.value === value.occupation.value}\n      getOptionLabel={(option) => option.occupation.value.toString()}\n      options={options}\n      loading={loading}\n\n      onInputChange={(event: object, value: string, reason: string) => {\n        if (reason === 'input') {\n          setInputWord(value);\n          changeOptionBaseOnValue(value);\n        }\n      }}\n\n\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Type to search...\"\n          variant=\"outlined\"\n          autoFocus={true}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n};\n\nJobs.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Jobs;\n","// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst SERVER = 'http://localhost:5820/esco/query';\n\nfunction querySkill(wordInput) {\n  let word = wordInput.toLowerCase();\n  var q = `\n  select ?skill where { \n  ?o a <http://data.europa.eu/esco/model#Skill> .\n  ?o <http://www.w3.org/2004/02/skos/core#prefLabel> ?skill .\n  FILTER langMatches( lang(?skill), \"pt\" ) .\n  FILTER( contains( lcase(str(?skill)), \"${word}\" ) ) .\n  } LIMIT 200`;\n\n  //FILTER( strStarts( ?skill, \"${wordInput}\" ) ) .\n\n  return q;\n}\n\nconst Skills = ({ className, ...rest }) => {\n\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n  const [inputWord, setInputWord] = React.useState('');\n\nfunction buildOptions(d) {\n  var data = d.results.bindings;\n  setOptions( Object.keys(data).map((key) => data[key]) )\n    //ata.results.map(item => item))\n}\n\nfunction changeOptionBaseOnValue(val) {\n      let query = querySkill(val);\n      fetch(SERVER+'?query='+encodeURIComponent(query), {\n          method: 'GET',\n          headers: {\n            'Authorization': 'Basic '+btoa('admin:admin'),\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/sparql-results+json',\n          },\n        })\n      .then(response => response.json())\n      .then(data => buildOptions(data) )\n      //.catch(error => this.setState({ error, isLoading: false }));\n}\n\n  return (\n    <Autocomplete\n      id=\"asynchronous\"\n      style={{ width:\"100%\" }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n        setOptions([]);\n      }}\n      getOptionSelected={(option, value) => option.skill.value === value.skill.value}\n      getOptionLabel={(option) => option.skill.value.toString()}\n      options={options}\n      loading={loading}\n\n      onInputChange={(event: object, value: string, reason: string) => {\n        if (reason === 'input') {\n          setInputWord(value);\n          changeOptionBaseOnValue(value);\n        }\n      }}\n\n\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Type to search...\"\n          variant=\"outlined\"\n          autoFocus={true}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n};\n\nSkills.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Skills;\n","// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst SERVER = 'http://localhost:5820/esco/query';\n\nfunction querySkill(wordInput) {\n  let word = wordInput.toLowerCase();\n  var q = `\n  select ?skill where { \n  ?o a <http://data.europa.eu/esco/model#Skill> .\n  ?o <http://www.w3.org/2004/02/skos/core#prefLabel> ?skill .\n  FILTER langMatches( lang(?skill), \"pt\" ) .\n  FILTER( contains( lcase(str(?skill)), \"${word}\" ) ) .\n  } LIMIT 200`;\n\n  //FILTER( strStarts( ?skill, \"${wordInput}\" ) ) .\n\n  return q;\n}\n\nconst Skills = ({ className, ...rest }) => {\n\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n  const [inputWord, setInputWord] = React.useState('');\n\nfunction buildOptions(d) {\n  var data = d.results.bindings;\n  setOptions( Object.keys(data).map((key) => data[key]) )\n    //ata.results.map(item => item))\n}\n\nfunction changeOptionBaseOnValue(val) {\n      let query = querySkill(val);\n      fetch(SERVER+'?query='+encodeURIComponent(query), {\n          method: 'GET',\n          headers: {\n            'Authorization': 'Basic '+btoa('admin:admin'),\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/sparql-results+json',\n          },\n        })\n      .then(response => response.json())\n      .then(data => buildOptions(data) )\n      //.catch(error => this.setState({ error, isLoading: false }));\n}\n\n  return (\n    <Autocomplete\n      id=\"asynchronous\"\n      style={{ width:\"100%\" }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n        setOptions([]);\n      }}\n      getOptionSelected={(option, value) => option.skill.value === value.skill.value}\n      getOptionLabel={(option) => option.skill.value.toString()}\n      options={options}\n      loading={loading}\n\n      onInputChange={(event: object, value: string, reason: string) => {\n        if (reason === 'input') {\n          setInputWord(value);\n          changeOptionBaseOnValue(value);\n        }\n      }}\n\n\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Type to search...\"\n          variant=\"outlined\"\n          autoFocus={true}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n};\n\nSkills.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Skills;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContentText,\n  DialogContent,\n  DialogTitle,\n  Card,\n  Grid,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nimport AddJobs from './AddJobs';\nimport AddSkills from './AddSkills';\nimport AddCategories from './AddCategories';\n\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\n\nconst FormMeta = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [open3, setOpen3] = React.useState(false);\n  const [open4, setOpen4] = React.useState(false);\n\n  const handleClickOpen1 = (number) => {\n    setOpen1(true);\n  };\n\n  const handleClickOpen2 = (number) => {\n    setOpen2(true);\n  };\n\n  const handleClickOpen3 = (number) => {\n    setOpen3(true);\n  };\n\n  const handleClickOpen4 = (number) => {\n    setOpen4(true);\n  };\n\n  const handleClose = (number) => {\n    setOpen1(false);\n    setOpen2(false);\n    setOpen3(false);\n    setOpen4(false);\n  };\n\n\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n\n  return (\n\n      <Card>\n\n        <CardContent>\n\n        <Grid style={{marginTop: \"0px\"}}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n          container\n        >\n          <Grid item xs={3} align=\"center\">\n            <Button className={classes.importButton} \n              color=\"default\"\n              variant=\"contained\"\n              onClick={handleClickOpen1}\n            >\n              Add Jobs\n            </Button>\n          </Grid>\n          <Grid item xs={3} align=\"center\">\n            <Button className={classes.importButton} \n              color=\"default\"\n              variant=\"contained\"\n              onClick={handleClickOpen2}\n            >\n              Add Skills\n            </Button>\n          </Grid>\n          <Grid item xs={3} align=\"center\">\n            <Button className={classes.importButton} \n              color=\"default\"\n              variant=\"contained\"\n              onClick={handleClickOpen3}\n            >\n              Add Tags\n            </Button>\n          </Grid>\n          <Grid item xs={3} align=\"center\">\n            <Button className={classes.importButton} \n              color=\"default\"\n              variant=\"contained\"\n              onClick={handleClickOpen4}\n            >\n              Add Friends\n            </Button>\n          </Grid>\n        </Grid>\n\n\n\n      <Dialog \n            open={open1} \n            fullWidth={true}\n            maxWidth=\"md\"\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n            >\n        <DialogTitle id=\"form-dialog-title\">Jobs</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add jobs related with your portfolio creation. This will better organized your CV and help companies to find you.\n          </DialogContentText>\n          <AddJobs />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog \n            open={open2} \n            fullWidth={true}\n            maxWidth=\"md\"\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n            >\n        <DialogTitle id=\"form-dialog-title\">Skills</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add skills related with your portfolio creation. This will better organized your CV and help companies to find you.\n          </DialogContentText>\n          <AddSkills />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n      <Dialog \n            open={open3} \n            fullWidth={true}\n            maxWidth=\"md\"\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n            >\n        <DialogTitle id=\"form-dialog-title\">Tags</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add tags that would help you identify your portfolio.\n          </DialogContentText>\n          <AddJobs />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n      <Dialog \n            open={open4} \n            fullWidth={true}\n            maxWidth=\"md\"\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n            >\n        <DialogTitle id=\"form-dialog-title\">Friends</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add friends that collaborated with this portfolio creation.\n          </DialogContentText>\n          <AddCategories />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n        </CardContent>\n\n      </Card>\n  );\n};\n\nFormMeta.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FormMeta;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Container,\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  TextField,\n  Divider,\n  SvgIcon,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nimport { Award as Artifact } from 'react-feather';\nimport { Send as Activity } from 'react-feather';\nimport { MessageCircle as Text } from 'react-feather';\n\nimport Toolbar from './Toolbar';\nimport FormMeta from './FormMeta';\nimport FormAssets from './FormAssets';\n//import FormCategories from './FormCategories';\nimport FormCategories from './FormCategories';\n\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  },\n  userName: {\n    fontWeight: 'bold',\n    color:'#000000'\n  },\n  userPhoto: {\n    borderRadius:'50%',\n    marginRight:'10px',\n  }\n}));\n\nconst DB = 'http://localhost:5820/esco/query';\n\nconst query = `\nselect ?occupation where { \n?o a <http://data.europa.eu/esco/model#Occupation> .\n?o <http://www.w3.org/2004/02/skos/core#prefLabel> ?occupation .\nFILTER langMatches( lang(?occupation), \"pt\" )\n} LIMIT 5\n`;\n\nconst SERVER = DB + \"?query=\" + encodeURIComponent(query);\n\n\n//STARDOG:\n//A query pode ser http://localhost:5820/esco/query?query=xxx\n//mas o xx tem de ser serialized com encodeURIComponent(xxx)\n//ou a query no body post\n//HEADERS:\n//Basic Auth: admin / admin\n//Para return de diferetnes formatos: (default: xml)\n//accept / application/sparql-results+json\n\n\nvar timeInterval = 2000;\nconst examplesMaxSize = 7;\n\nconst textExamples = {\n  didExamples: [\"Painted 🖌\", \"Composed 🎤\", \"Published 🎓\", \"Filmed 🎥\", \"Built 🏡\", \"Wrote 📖\", \"Invented 🔧\", \"Cooked 🍪\"],\n  livedExamples: [\"Graduated 🎓\", \"Won 🏆\", \"Experienced 👶\", \"Certfied 📚\", \"Scheduled 🏖\", \"Married 💍\", \"Moved 🔑\", \"Visited 🗿\"],\n  saidExamples: [\"Thought 💭\", \"Teached 💡\", \"Announcing 📢\", \"Theorized 🔎\", \"Believe 💫\", \"Sketched 🗒\", \"Debating 🗣\", \"Advise 💬\"]\n}\n\nconst Post = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  //Hooks (States for Functions)\n  const [formVar, setForm] = useState(\"did\");\n  const [examplesN, setExamplesN] = useState(0);\n  const [examplesText, setExamplesText] = useState(textExamples.didExamples);\n\n  //const [user, setUser] = useState({ name: \"John Doe\", age: 20 });\n\n  const [count, setCount] = useState(0);\n\n  //const formType = (arg) => setForm(arg);\n  const formType = (arg) => {\n      setForm(arg);\n      setExamplesN(0);\n      if (arg == \"lived\") {\n        setExamplesText(textExamples.livedExamples);\n      }\n      else if (arg == \"said\") {\n        setExamplesText(textExamples.saidExamples);\n      }\n      else {\n        setExamplesText(textExamples.didExamples);\n      }\n  }\n\nfunction timerCalc() {\n    if (examplesN === examplesMaxSize) {\n      setExamplesN(0);\n    } else {\n      setExamplesN(examplesN + 1);\n    }\n} \n\nfunction useInterval(callback, delay) {\n  const intervalId = React.useRef(null);\n  const savedCallback = React.useRef(callback);\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  });\n  React.useEffect(() => {\n    const tick = () => savedCallback.current();\n    if (typeof delay === 'number') {\n      intervalId.current = window.setInterval(tick, delay);\n      return () => window.clearInterval(intervalId.current);\n    }\n  }, [delay]);\n  return intervalId.current;\n}\n\nuseInterval(() => {\n  timerCalc();\n}, timeInterval);\n\n  return (\n    <Container maxWidth={false}>\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          justifyContent=\"left\"\n          alignItems=\"center\"\n          mb={3}\n          style={{position: 'relative'}}\n        >\n          <Avatar\n            className={classes.userPhoto}\n            alt=\"User Photo\"\n            src=\"\"\n            variant=\"square\"\n          />\n\n            <Toolbar />\n\n        </Box>\n\n<Divider />\n\n        <Grid style={{paddingTop: \"10px\"}}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={8}\n          container\n        >\n\n          <Grid item style={{paddingBottom: \"20px\"}}>\n          <Fab\n            variant=\"extended\"\n            size=\"small\"\n            aria-label=\"add\"\n            color={formVar==\"did\" ? \"primary\":\"default\"}\n            style={{paddingLeft:'15px',paddingRight:'15px'}}\n            onClick={() => formType('did')}\n          >\n\n            Did this!&nbsp;<SvgIcon\n                fontSize=\"small\"\n                //color=\"action\"\n              >\n                <Artifact />\n              </SvgIcon>\n          </Fab>\n          </Grid>\n\n          <Grid item style={{paddingBottom: \"20px\"}}>\n          <Fab\n            variant=\"extended\"\n            size=\"small\"\n            color={formVar==\"lived\" ? \"primary\":\"default\"}\n            aria-label=\"add\"\n            style={{paddingLeft:'15px',paddingRight:'15px'}}\n            onClick={() => formType('lived')}\n          >\n            Lived this!&nbsp;<SvgIcon\n                fontSize=\"small\"\n                //color=\"action\"\n              >\n                <Activity />\n              </SvgIcon>\n          </Fab>\n          </Grid>\n\n          <Grid item style={{paddingBottom: \"20px\"}}>\n          <Fab\n            variant=\"extended\"\n            size=\"small\"\n            color={formVar==\"said\" ? \"primary\":\"default\"}\n            aria-label=\"add\"\n            style={{paddingLeft:'15px',paddingRight:'15px'}}\n            onClick={() => formType('said')}\n          >\n            Said this!&nbsp;<SvgIcon\n                fontSize=\"small\"\n                //color=\"action\"\n              >\n                <Text />\n              </SvgIcon>\n          </Fab>\n          </Grid>\n        </Grid>\n      </CardContent>\n\n\n      <Grid style={{marginTop: \"20px\", background:\"#f4f6f8\"}}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n        container\n      >\n        <Grid item xs={6}>\n            <Typography variant=\"overline\" component=\"p\" align=\"right\">\n              Things that I <strong>{formVar}</strong>:\n            </Typography>\n        </Grid>\n        <Grid item xs={6}>\n        <Typography variant=\"overline\" component=\"p\" align=\"left\">\n        <strong>{examplesText[examplesN]}</strong> this!\n        </Typography>\n        </Grid>\n      </Grid>\n     \n      <FormMeta />\n\n      <FormCategories />\n      \n      <FormAssets />\n\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          style={{marginRight:\"15px\"}}\n        >\n          Draft\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Publish\n        </Button>\n      </Box>\n\n    </Card>\n    </form>\n  </Container>\n  );\n};\n\nPost.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Post;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Notifications from './Notifications';\nimport Password from './Password';\n\nimport Post from './Post';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SettingsView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Post\"\n    >\n      <Container maxWidth=\"lg\">\n        <Post />\n      </Container>\n    </Page>\n  );\n};\n\nexport default SettingsView;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport MainLayout from 'src/layouts/MainLayout';\nimport AccountView from 'src/views/account/AccountView';\nimport UsersView from 'src/views/users/UsersView';\nimport DashboardView from 'src/views/homepage/DashboardView';\nimport LoginView from 'src/views/auth/LoginView';\nimport NotFoundView from 'src/views/errors/NotFoundView';\nimport CommunitiesView from 'src/views/communities/CommunitiesView';\nimport RegisterView from 'src/views/auth/RegisterView';\nimport SettingsView from 'src/views/settings/SettingsView';\nimport PostView from 'src/views/post/PostView';\n\nconst routes = [\n  {\n    path: '/',\n    element: <DashboardLayout />,\n    children: [\n      { path: 'wall', element: <DashboardView /> },\n      { path: 'account', element: <AccountView /> },\n      { path: 'users', element: <UsersView /> },\n      { path: 'communities', element: <CommunitiesView /> },\n      { path: 'settings', element: <SettingsView /> },\n      { path: 'post', element: <PostView /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: 'login', element: <LoginView /> },\n      { path: 'register', element: <RegisterView /> },\n      { path: '404', element: <NotFoundView /> },\n      { path: '/', element: <Navigate to=\"/app/dashboard\" /> },\n\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\n\nconst App = () => {\n  const routing = useRoutes(routes);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { BrowserRouter } from 'react-router-dom';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n  /*<BrowserRouter>\n    <App />\n  </BrowserRouter>*/\n  /*\n  Disabel BrowserRouter\n  And Uncomment this HashRouter\n  For a non-backend depedent (e.g. mobile)*/\n  <HashRouter>\n    <App />\n  </HashRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}